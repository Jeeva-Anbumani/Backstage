{"version":3,"file":"static/exposed-PluginRoot.196fccb4.chunk.js","mappings":"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","sources":["webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/annotations.ts","webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/generated/core/CancelablePromise.ts","webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/generated/core/OpenAPI.ts","webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/generated/core/ApiError.ts","webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/generated/core/request.ts","webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/generated/services/SearchService.ts","webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/api/nexus-repository-manager-api-client/nexus-repository-manager-api-client.ts","webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/routes.ts","webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/plugin.ts","webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/utils/get-file-size/get-file-size.ts","webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/utils/get-hash/get-hash.ts","webpack://janus-idp.backstage-plugin-nexus-repository-manager/./src/utils/is-primary-asset/is-primary-asset.ts"],"sourcesContent":["import type { Annotation } from './types';\n\nexport const NEXUS_REPOSITORY_MANAGER_CONFIG_ANNOTATIONS = [\n  {\n    annotation: 'nexus-repository-manager/config.title',\n  },\n] as const satisfies Readonly<Annotation[]>;\n\nexport const NEXUS_REPOSITORY_MANAGER_ANNOTATIONS = [\n  {\n    annotation: 'nexus-repository-manager/docker.image-name',\n    query: str => ({\n      dockerImageName: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/docker.image-tag',\n    query: str => ({\n      dockerImageTag: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/docker.layer-id',\n    query: str => ({\n      dockerLayerId: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/docker.content-digest',\n    query: str => ({\n      dockerContentDigest: str,\n    }),\n  },\n] as const satisfies Readonly<Annotation[]>;\n\nexport const NEXUS_REPOSITORY_MANAGER_EXPERIMENTAL_ANNOTATIONS = [\n  {\n    annotation: 'nexus-repository-manager/keyword',\n    query: str => ({\n      q: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/repository',\n    query: str => ({\n      repository: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/format',\n    query: str => ({\n      format: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/group',\n    query: str => ({\n      group: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/name',\n    query: str => ({\n      name: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/version',\n    query: str => ({\n      version: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/prerelease',\n    query: str => ({\n      prerelease: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/md5',\n    query: str => ({\n      md5: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/sha1',\n    query: str => ({\n      sha1: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/sha256',\n    query: str => ({\n      sha256: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/sha512',\n    query: str => ({\n      sha512: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/conan.base-version',\n    query: str => ({\n      conanBaseVersion: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/conan.channel',\n    query: str => ({\n      conanChannel: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/conan.revision',\n    query: str => ({\n      conanRevision: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/conan.package-id',\n    query: str => ({\n      conanPackageId: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/conan.package-revision',\n    query: str => ({\n      conanPackageRevision: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/maven.group-id',\n    query: str => ({\n      mavenGroupId: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/maven.artifact-id',\n    query: str => ({\n      mavenArtifactId: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/maven.base-version',\n    query: str => ({\n      mavenBaseVersion: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/maven.extension',\n    query: str => ({\n      mavenExtension: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/maven.classifier',\n    query: str => ({\n      mavenClassifier: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/gavec',\n    query: str => ({\n      gavec: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.scope',\n    query: str => ({\n      npmScope: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.author',\n    query: str => ({\n      npmAuthor: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.description',\n    query: str => ({\n      npmDescription: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.keywords',\n    query: str => ({\n      npmKeywords: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.license',\n    query: str => ({\n      npmLicense: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.tagged-is',\n    query: str => ({\n      npmTaggedIs: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.tagged-not',\n    query: str => ({\n      npmTaggedNot: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.id',\n    query: str => ({\n      nugetId: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.tags',\n    query: str => ({\n      nugetTags: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.title',\n    query: str => ({\n      nugetTitle: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.authors',\n    query: str => ({\n      nugetAuthors: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.description',\n    query: str => ({\n      nugetDescription: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.summary',\n    query: str => ({\n      nugetSummary: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/p2.plugin-name',\n    query: str => ({\n      p2PluginName: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/pypi.classifiers',\n    query: str => ({\n      pypiClassifiers: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/pypi.description',\n    query: str => ({\n      pypiDescription: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/pypi.keywords',\n    query: str => ({\n      pypiKeywords: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/pypi.summary',\n    query: str => ({\n      pypiSummary: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/rubygems.description',\n    query: str => ({\n      rubygemsDescription: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/rubygems.platform',\n    query: str => ({\n      rubygemsPlatform: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/rubygems.summary',\n    query: str => ({\n      rubygemsSummary: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/yum.architecture',\n    query: str => ({\n      yumArchitecture: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/yum.name',\n    query: str => ({\n      yumName: str,\n    }),\n  },\n] as const satisfies Readonly<Annotation[]>;\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    #isResolved: boolean;\n    #isRejected: boolean;\n    #isCancelled: boolean;\n    readonly #cancelHandlers: (() => void)[];\n    readonly #promise: Promise<T>;\n    #resolve?: (value: T | PromiseLike<T>) => void;\n    #reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this.#isResolved = false;\n        this.#isRejected = false;\n        this.#isCancelled = false;\n        this.#cancelHandlers = [];\n        this.#promise = new Promise<T>((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isResolved = true;\n                this.#resolve?.(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isRejected = true;\n                this.#reject?.(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this.#isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this.#isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this.#isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n     get [Symbol.toStringTag]() {\n            return \"Cancellable Promise\";\n     }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this.#promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this.#promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n            return;\n        }\n        this.#isCancelled = true;\n        if (this.#cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this.#cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this.#cancelHandlers.length = 0;\n        this.#reject?.(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this.#isCancelled;\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\nexport type OpenAPIConfig = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    CREDENTIALS: 'include' | 'omit' | 'same-origin';\n    TOKEN?: string | Resolver<string> | undefined;\n    USERNAME?: string | Resolver<string> | undefined;\n    PASSWORD?: string | Resolver<string> | undefined;\n    HEADERS?: Headers | Resolver<Headers> | undefined;\n    ENCODE_PATH?: ((path: string) => string) | undefined;\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n    BASE: '/service/rest',\n    VERSION: '3.58.1-02',\n    WITH_CREDENTIALS: false,\n    CREDENTIALS: 'include',\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined,\n};\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n    public readonly request: ApiRequestOptions;\n\n    constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n        super(message);\n\n        this.name = 'ApiError';\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n    return value !== undefined && value !== null;\n};\n\nexport const isString = (value: any): value is string => {\n    return typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: any): value is string => {\n    return isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n    return (\n        typeof value === 'object' &&\n        typeof value.type === 'string' &&\n        typeof value.stream === 'function' &&\n        typeof value.arrayBuffer === 'function' &&\n        typeof value.constructor === 'function' &&\n        typeof value.constructor.name === 'string' &&\n        /^(Blob|File)$/.test(value.constructor.name) &&\n        /^(Blob|File)$/.test(value[Symbol.toStringTag])\n    );\n};\n\nexport const isFormData = (value: any): value is FormData => {\n    return value instanceof FormData;\n};\n\nexport const base64 = (str: string): string => {\n    try {\n        return btoa(str);\n    } catch (err) {\n        // @ts-ignore\n        return Buffer.from(str).toString('base64');\n    }\n};\n\nexport const getQueryString = (params: Record<string, any>): string => {\n    const qs: string[] = [];\n\n    const append = (key: string, value: any) => {\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n\n    const process = (key: string, value: any) => {\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(v => {\n                    process(key, v);\n                });\n            } else if (typeof value === 'object') {\n                Object.entries(value).forEach(([k, v]) => {\n                    process(`${key}[${k}]`, v);\n                });\n            } else {\n                append(key, value);\n            }\n        }\n    };\n\n    Object.entries(params).forEach(([key, value]) => {\n        process(key, value);\n    });\n\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n\n    return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n    const encoder = config.ENCODE_PATH || encodeURI;\n\n    const path = options.url\n        .replace('{api-version}', config.VERSION)\n        .replace(/{(.*?)}/g, (substring: string, group: string) => {\n            if (options.path?.hasOwnProperty(group)) {\n                return encoder(String(options.path[group]));\n            }\n            return substring;\n        });\n\n    const url = `${config.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n    if (options.formData) {\n        const formData = new FormData();\n\n        const process = (key: string, value: any) => {\n            if (isString(value) || isBlob(value)) {\n                formData.append(key, value);\n            } else {\n                formData.append(key, JSON.stringify(value));\n            }\n        };\n\n        Object.entries(options.formData)\n            .filter(([_, value]) => isDefined(value))\n            .forEach(([key, value]) => {\n                if (Array.isArray(value)) {\n                    value.forEach(v => process(key, v));\n                } else {\n                    process(key, value);\n                }\n            });\n\n        return formData;\n    }\n    return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n};\n\nexport const getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions): Promise<Headers> => {\n    const token = await resolve(options, config.TOKEN);\n    const username = await resolve(options, config.USERNAME);\n    const password = await resolve(options, config.PASSWORD);\n    const additionalHeaders = await resolve(options, config.HEADERS);\n\n    const headers = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n    })\n        .filter(([_, value]) => isDefined(value))\n        .reduce((headers, [key, value]) => ({\n            ...headers,\n            [key]: String(value),\n        }), {} as Record<string, string>);\n\n    if (isStringWithValue(token)) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    if (options.body) {\n        if (options.mediaType) {\n            headers['Content-Type'] = options.mediaType;\n        } else if (isBlob(options.body)) {\n            headers['Content-Type'] = options.body.type || 'application/octet-stream';\n        } else if (isString(options.body)) {\n            headers['Content-Type'] = 'text/plain';\n        } else if (!isFormData(options.body)) {\n            headers['Content-Type'] = 'application/json';\n        }\n    }\n\n    return new Headers(headers);\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): any => {\n    if (options.body !== undefined) {\n        if (options.mediaType?.includes('/json')) {\n            return JSON.stringify(options.body)\n        } else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n            return options.body;\n        } else {\n            return JSON.stringify(options.body);\n        }\n    }\n    return undefined;\n};\n\nexport const sendRequest = async (\n    config: OpenAPIConfig,\n    options: ApiRequestOptions,\n    url: string,\n    body: any,\n    formData: FormData | undefined,\n    headers: Headers,\n    onCancel: OnCancel\n): Promise<Response> => {\n    const controller = new AbortController();\n\n    const request: RequestInit = {\n        headers,\n        body: body ?? formData,\n        method: options.method,\n        signal: controller.signal,\n    };\n\n    if (config.WITH_CREDENTIALS) {\n        request.credentials = config.CREDENTIALS;\n    }\n\n    onCancel(() => controller.abort());\n\n    return await fetch(url, request);\n};\n\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n    if (responseHeader) {\n        const content = response.headers.get(responseHeader);\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return undefined;\n};\n\nexport const getResponseBody = async (response: Response): Promise<any> => {\n    if (response.status !== 204) {\n        try {\n            const contentType = response.headers.get('Content-Type');\n            if (contentType) {\n                const jsonTypes = ['application/json', 'application/problem+json']\n                const isJSON = jsonTypes.some(type => contentType.toLowerCase().startsWith(type));\n                if (isJSON) {\n                    return await response.json();\n                } else {\n                    return await response.text();\n                }\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    return undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(options, result, error);\n    }\n\n    if (!result.ok) {\n        const errorStatus = result.status ?? 'unknown';\n        const errorStatusText = result.statusText ?? 'unknown';\n        const errorBody = (() => {\n            try {\n                return JSON.stringify(result.body, null, 2);\n            } catch (e) {\n                return undefined;\n            }\n        })();\n\n        throw new ApiError(options, result,\n            `Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n        );\n    }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        try {\n            const url = getUrl(config, options);\n            const formData = getFormData(options);\n            const body = getRequestBody(options);\n            const headers = await getHeaders(config, options);\n\n            if (!onCancel.isCancelled) {\n                const response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n                const responseBody = await getResponseBody(response);\n                const responseHeader = getResponseHeader(response, options.responseHeader);\n\n                const result: ApiResult = {\n                    url,\n                    ok: response.ok,\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader ?? responseBody,\n                };\n\n                catchErrorCodes(options, result);\n\n                resolve(result.body);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { PageAssetXO } from '../models/PageAssetXO';\nimport type { PageComponentXO } from '../models/PageComponentXO';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\n\nexport class SearchService {\n\n    /**\n     * Search assets\n     * @returns PageAssetXO successful operation\n     * @throws ApiError\n     */\n    public static searchAssets({\n        continuationToken,\n        sort,\n        direction,\n        timeout,\n        q,\n        repository,\n        format,\n        group,\n        name,\n        version,\n        prerelease,\n        md5,\n        sha1,\n        sha256,\n        sha512,\n        conanBaseVersion,\n        conanChannel,\n        conanRevision,\n        conanPackageId,\n        conanPackageRevision,\n        dockerImageName,\n        dockerImageTag,\n        dockerLayerId,\n        dockerContentDigest,\n        mavenGroupId,\n        mavenArtifactId,\n        mavenBaseVersion,\n        mavenExtension,\n        mavenClassifier,\n        gavec,\n        npmScope,\n        npmAuthor,\n        npmDescription,\n        npmKeywords,\n        npmLicense,\n        npmTaggedIs,\n        npmTaggedNot,\n        nugetId,\n        nugetTags,\n        nugetTitle,\n        nugetAuthors,\n        nugetDescription,\n        nugetSummary,\n        p2PluginName,\n        pypiClassifiers,\n        pypiDescription,\n        pypiKeywords,\n        pypiSummary,\n        rubygemsDescription,\n        rubygemsPlatform,\n        rubygemsSummary,\n        yumArchitecture,\n        yumName,\n    }: {\n        /**\n         * A token returned by a prior request. If present, the next page of results are returned\n         */\n        continuationToken?: string,\n        /**\n         * The field to sort the results against, if left empty, a sort based on match weight will be used.\n         */\n        sort?: 'group' | 'name' | 'version' | 'repository',\n        /**\n         * The direction to sort records in, defaults to ascending ('asc') for all sort fields, except version, which defaults to descending ('desc')\n         */\n        direction?: 'asc' | 'desc',\n        /**\n         * How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used.\n         */\n        timeout?: number,\n        /**\n         * Query by keyword\n         */\n        q?: string,\n        /**\n         * Repository name\n         */\n        repository?: string,\n        /**\n         * Query by format\n         */\n        format?: string,\n        /**\n         * Component group\n         */\n        group?: string,\n        /**\n         * Component name\n         */\n        name?: string,\n        /**\n         * Component version\n         */\n        version?: string,\n        /**\n         * Prerelease version flag\n         */\n        prerelease?: string,\n        /**\n         * Specific MD5 hash of component's asset\n         */\n        md5?: string,\n        /**\n         * Specific SHA-1 hash of component's asset\n         */\n        sha1?: string,\n        /**\n         * Specific SHA-256 hash of component's asset\n         */\n        sha256?: string,\n        /**\n         * Specific SHA-512 hash of component's asset\n         */\n        sha512?: string,\n        /**\n         * Conan base version\n         */\n        conanBaseVersion?: string,\n        /**\n         * Conan channel\n         */\n        conanChannel?: string,\n        /**\n         * Conan recipe revision\n         */\n        conanRevision?: string,\n        /**\n         * Conan package id\n         */\n        conanPackageId?: string,\n        /**\n         * Conan package revision\n         */\n        conanPackageRevision?: string,\n        /**\n         * Docker image name\n         */\n        dockerImageName?: string,\n        /**\n         * Docker image tag\n         */\n        dockerImageTag?: string,\n        /**\n         * Docker layer ID\n         */\n        dockerLayerId?: string,\n        /**\n         * Docker content digest\n         */\n        dockerContentDigest?: string,\n        /**\n         * Maven groupId\n         */\n        mavenGroupId?: string,\n        /**\n         * Maven artifactId\n         */\n        mavenArtifactId?: string,\n        /**\n         * Maven base version\n         */\n        mavenBaseVersion?: string,\n        /**\n         * Maven extension of component's asset\n         */\n        mavenExtension?: string,\n        /**\n         * Maven classifier of component's asset\n         */\n        mavenClassifier?: string,\n        /**\n         * Group asset version extension classifier\n         */\n        gavec?: string,\n        /**\n         * npm scope\n         */\n        npmScope?: string,\n        /**\n         * npm author\n         */\n        npmAuthor?: string,\n        /**\n         * npm description\n         */\n        npmDescription?: string,\n        /**\n         * npm keywords\n         */\n        npmKeywords?: string,\n        /**\n         * npm license\n         */\n        npmLicense?: string,\n        /**\n         * npm tagged is\n         */\n        npmTaggedIs?: string,\n        /**\n         * npm tagged not\n         */\n        npmTaggedNot?: string,\n        /**\n         * NuGet id\n         */\n        nugetId?: string,\n        /**\n         * NuGet tags\n         */\n        nugetTags?: string,\n        /**\n         * NuGet title\n         */\n        nugetTitle?: string,\n        /**\n         * NuGet authors\n         */\n        nugetAuthors?: string,\n        /**\n         * NuGet description\n         */\n        nugetDescription?: string,\n        /**\n         * NuGet summary\n         */\n        nugetSummary?: string,\n        /**\n         * p2 plugin name\n         */\n        p2PluginName?: string,\n        /**\n         * PyPI classifiers\n         */\n        pypiClassifiers?: string,\n        /**\n         * PyPI description\n         */\n        pypiDescription?: string,\n        /**\n         * PyPI keywords\n         */\n        pypiKeywords?: string,\n        /**\n         * PyPI summary\n         */\n        pypiSummary?: string,\n        /**\n         * RubyGems description\n         */\n        rubygemsDescription?: string,\n        /**\n         * RubyGems platform\n         */\n        rubygemsPlatform?: string,\n        /**\n         * RubyGems summary\n         */\n        rubygemsSummary?: string,\n        /**\n         * Yum architecture\n         */\n        yumArchitecture?: string,\n        /**\n         * Yum package name\n         */\n        yumName?: string,\n    }): CancelablePromise<PageAssetXO> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/search/assets',\n            query: {\n                'continuationToken': continuationToken,\n                'sort': sort,\n                'direction': direction,\n                'timeout': timeout,\n                'q': q,\n                'repository': repository,\n                'format': format,\n                'group': group,\n                'name': name,\n                'version': version,\n                'prerelease': prerelease,\n                'md5': md5,\n                'sha1': sha1,\n                'sha256': sha256,\n                'sha512': sha512,\n                'conan.baseVersion': conanBaseVersion,\n                'conan.channel': conanChannel,\n                'conan.revision': conanRevision,\n                'conan.packageId': conanPackageId,\n                'conan.packageRevision': conanPackageRevision,\n                'docker.imageName': dockerImageName,\n                'docker.imageTag': dockerImageTag,\n                'docker.layerId': dockerLayerId,\n                'docker.contentDigest': dockerContentDigest,\n                'maven.groupId': mavenGroupId,\n                'maven.artifactId': mavenArtifactId,\n                'maven.baseVersion': mavenBaseVersion,\n                'maven.extension': mavenExtension,\n                'maven.classifier': mavenClassifier,\n                'gavec': gavec,\n                'npm.scope': npmScope,\n                'npm.author': npmAuthor,\n                'npm.description': npmDescription,\n                'npm.keywords': npmKeywords,\n                'npm.license': npmLicense,\n                'npm.tagged_is': npmTaggedIs,\n                'npm.tagged_not': npmTaggedNot,\n                'nuget.id': nugetId,\n                'nuget.tags': nugetTags,\n                'nuget.title': nugetTitle,\n                'nuget.authors': nugetAuthors,\n                'nuget.description': nugetDescription,\n                'nuget.summary': nugetSummary,\n                'p2.pluginName': p2PluginName,\n                'pypi.classifiers': pypiClassifiers,\n                'pypi.description': pypiDescription,\n                'pypi.keywords': pypiKeywords,\n                'pypi.summary': pypiSummary,\n                'rubygems.description': rubygemsDescription,\n                'rubygems.platform': rubygemsPlatform,\n                'rubygems.summary': rubygemsSummary,\n                'yum.architecture': yumArchitecture,\n                'yum.name': yumName,\n            },\n        });\n    }\n\n    /**\n     * Search and download asset\n     * Returns a 302 Found with location header field set to download URL. Unless a sort parameter is supplied, the search must return a single asset to receive download URL.\n     * @returns void\n     * @throws ApiError\n     */\n    public static searchAndDownloadAssets({\n        sort,\n        direction,\n        timeout,\n        q,\n        repository,\n        format,\n        group,\n        name,\n        version,\n        prerelease,\n        md5,\n        sha1,\n        sha256,\n        sha512,\n        conanBaseVersion,\n        conanChannel,\n        conanRevision,\n        conanPackageId,\n        conanPackageRevision,\n        dockerImageName,\n        dockerImageTag,\n        dockerLayerId,\n        dockerContentDigest,\n        mavenGroupId,\n        mavenArtifactId,\n        mavenBaseVersion,\n        mavenExtension,\n        mavenClassifier,\n        gavec,\n        npmScope,\n        npmAuthor,\n        npmDescription,\n        npmKeywords,\n        npmLicense,\n        npmTaggedIs,\n        npmTaggedNot,\n        nugetId,\n        nugetTags,\n        nugetTitle,\n        nugetAuthors,\n        nugetDescription,\n        nugetSummary,\n        p2PluginName,\n        pypiClassifiers,\n        pypiDescription,\n        pypiKeywords,\n        pypiSummary,\n        rubygemsDescription,\n        rubygemsPlatform,\n        rubygemsSummary,\n        yumArchitecture,\n        yumName,\n    }: {\n        /**\n         * The field to sort the results against, if left empty and more than 1 result is returned, the request will fail.\n         */\n        sort?: 'group' | 'name' | 'version' | 'repository',\n        /**\n         * The direction to sort records in, defaults to ascending ('asc') for all sort fields, except version, which defaults to descending ('desc')\n         */\n        direction?: 'asc' | 'desc',\n        /**\n         * How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used.\n         */\n        timeout?: number,\n        /**\n         * Query by keyword\n         */\n        q?: string,\n        /**\n         * Repository name\n         */\n        repository?: string,\n        /**\n         * Query by format\n         */\n        format?: string,\n        /**\n         * Component group\n         */\n        group?: string,\n        /**\n         * Component name\n         */\n        name?: string,\n        /**\n         * Component version\n         */\n        version?: string,\n        /**\n         * Prerelease version flag\n         */\n        prerelease?: string,\n        /**\n         * Specific MD5 hash of component's asset\n         */\n        md5?: string,\n        /**\n         * Specific SHA-1 hash of component's asset\n         */\n        sha1?: string,\n        /**\n         * Specific SHA-256 hash of component's asset\n         */\n        sha256?: string,\n        /**\n         * Specific SHA-512 hash of component's asset\n         */\n        sha512?: string,\n        /**\n         * Conan base version\n         */\n        conanBaseVersion?: string,\n        /**\n         * Conan channel\n         */\n        conanChannel?: string,\n        /**\n         * Conan recipe revision\n         */\n        conanRevision?: string,\n        /**\n         * Conan package id\n         */\n        conanPackageId?: string,\n        /**\n         * Conan package revision\n         */\n        conanPackageRevision?: string,\n        /**\n         * Docker image name\n         */\n        dockerImageName?: string,\n        /**\n         * Docker image tag\n         */\n        dockerImageTag?: string,\n        /**\n         * Docker layer ID\n         */\n        dockerLayerId?: string,\n        /**\n         * Docker content digest\n         */\n        dockerContentDigest?: string,\n        /**\n         * Maven groupId\n         */\n        mavenGroupId?: string,\n        /**\n         * Maven artifactId\n         */\n        mavenArtifactId?: string,\n        /**\n         * Maven base version\n         */\n        mavenBaseVersion?: string,\n        /**\n         * Maven extension of component's asset\n         */\n        mavenExtension?: string,\n        /**\n         * Maven classifier of component's asset\n         */\n        mavenClassifier?: string,\n        /**\n         * Group asset version extension classifier\n         */\n        gavec?: string,\n        /**\n         * npm scope\n         */\n        npmScope?: string,\n        /**\n         * npm author\n         */\n        npmAuthor?: string,\n        /**\n         * npm description\n         */\n        npmDescription?: string,\n        /**\n         * npm keywords\n         */\n        npmKeywords?: string,\n        /**\n         * npm license\n         */\n        npmLicense?: string,\n        /**\n         * npm tagged is\n         */\n        npmTaggedIs?: string,\n        /**\n         * npm tagged not\n         */\n        npmTaggedNot?: string,\n        /**\n         * NuGet id\n         */\n        nugetId?: string,\n        /**\n         * NuGet tags\n         */\n        nugetTags?: string,\n        /**\n         * NuGet title\n         */\n        nugetTitle?: string,\n        /**\n         * NuGet authors\n         */\n        nugetAuthors?: string,\n        /**\n         * NuGet description\n         */\n        nugetDescription?: string,\n        /**\n         * NuGet summary\n         */\n        nugetSummary?: string,\n        /**\n         * p2 plugin name\n         */\n        p2PluginName?: string,\n        /**\n         * PyPI classifiers\n         */\n        pypiClassifiers?: string,\n        /**\n         * PyPI description\n         */\n        pypiDescription?: string,\n        /**\n         * PyPI keywords\n         */\n        pypiKeywords?: string,\n        /**\n         * PyPI summary\n         */\n        pypiSummary?: string,\n        /**\n         * RubyGems description\n         */\n        rubygemsDescription?: string,\n        /**\n         * RubyGems platform\n         */\n        rubygemsPlatform?: string,\n        /**\n         * RubyGems summary\n         */\n        rubygemsSummary?: string,\n        /**\n         * Yum architecture\n         */\n        yumArchitecture?: string,\n        /**\n         * Yum package name\n         */\n        yumName?: string,\n    }): CancelablePromise<void> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/search/assets/download',\n            query: {\n                'sort': sort,\n                'direction': direction,\n                'timeout': timeout,\n                'q': q,\n                'repository': repository,\n                'format': format,\n                'group': group,\n                'name': name,\n                'version': version,\n                'prerelease': prerelease,\n                'md5': md5,\n                'sha1': sha1,\n                'sha256': sha256,\n                'sha512': sha512,\n                'conan.baseVersion': conanBaseVersion,\n                'conan.channel': conanChannel,\n                'conan.revision': conanRevision,\n                'conan.packageId': conanPackageId,\n                'conan.packageRevision': conanPackageRevision,\n                'docker.imageName': dockerImageName,\n                'docker.imageTag': dockerImageTag,\n                'docker.layerId': dockerLayerId,\n                'docker.contentDigest': dockerContentDigest,\n                'maven.groupId': mavenGroupId,\n                'maven.artifactId': mavenArtifactId,\n                'maven.baseVersion': mavenBaseVersion,\n                'maven.extension': mavenExtension,\n                'maven.classifier': mavenClassifier,\n                'gavec': gavec,\n                'npm.scope': npmScope,\n                'npm.author': npmAuthor,\n                'npm.description': npmDescription,\n                'npm.keywords': npmKeywords,\n                'npm.license': npmLicense,\n                'npm.tagged_is': npmTaggedIs,\n                'npm.tagged_not': npmTaggedNot,\n                'nuget.id': nugetId,\n                'nuget.tags': nugetTags,\n                'nuget.title': nugetTitle,\n                'nuget.authors': nugetAuthors,\n                'nuget.description': nugetDescription,\n                'nuget.summary': nugetSummary,\n                'p2.pluginName': p2PluginName,\n                'pypi.classifiers': pypiClassifiers,\n                'pypi.description': pypiDescription,\n                'pypi.keywords': pypiKeywords,\n                'pypi.summary': pypiSummary,\n                'rubygems.description': rubygemsDescription,\n                'rubygems.platform': rubygemsPlatform,\n                'rubygems.summary': rubygemsSummary,\n                'yum.architecture': yumArchitecture,\n                'yum.name': yumName,\n            },\n            errors: {\n                400: `ValidationErrorXO{id='*', message='Search returned multiple assets, please refine search criteria to find a single asset or use the sort query parameter to retrieve the first result.'}`,\n                404: `Asset search returned no results`,\n            },\n        });\n    }\n\n    /**\n     * Search components\n     * @returns PageComponentXO successful operation\n     * @throws ApiError\n     */\n    public static search({\n        continuationToken,\n        sort,\n        direction,\n        timeout,\n        q,\n        repository,\n        format,\n        group,\n        name,\n        version,\n        prerelease,\n        md5,\n        sha1,\n        sha256,\n        sha512,\n        conanBaseVersion,\n        conanChannel,\n        conanRevision,\n        conanPackageId,\n        conanPackageRevision,\n        dockerImageName,\n        dockerImageTag,\n        dockerLayerId,\n        dockerContentDigest,\n        mavenGroupId,\n        mavenArtifactId,\n        mavenBaseVersion,\n        mavenExtension,\n        mavenClassifier,\n        gavec,\n        npmScope,\n        npmAuthor,\n        npmDescription,\n        npmKeywords,\n        npmLicense,\n        npmTaggedIs,\n        npmTaggedNot,\n        nugetId,\n        nugetTags,\n        nugetTitle,\n        nugetAuthors,\n        nugetDescription,\n        nugetSummary,\n        p2PluginName,\n        pypiClassifiers,\n        pypiDescription,\n        pypiKeywords,\n        pypiSummary,\n        rubygemsDescription,\n        rubygemsPlatform,\n        rubygemsSummary,\n        yumArchitecture,\n        yumName,\n    }: {\n        /**\n         * A token returned by a prior request. If present, the next page of results are returned\n         */\n        continuationToken?: string,\n        /**\n         * The field to sort the results against, if left empty, a sort based on match weight will be used.\n         */\n        sort?: 'group' | 'name' | 'version' | 'repository',\n        /**\n         * The direction to sort records in, defaults to ascending ('asc') for all sort fields, except version, which defaults to descending ('desc')\n         */\n        direction?: 'asc' | 'desc',\n        /**\n         * How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used.\n         */\n        timeout?: number,\n        /**\n         * Query by keyword\n         */\n        q?: string,\n        /**\n         * Repository name\n         */\n        repository?: string,\n        /**\n         * Query by format\n         */\n        format?: string,\n        /**\n         * Component group\n         */\n        group?: string,\n        /**\n         * Component name\n         */\n        name?: string,\n        /**\n         * Component version\n         */\n        version?: string,\n        /**\n         * Prerelease version flag\n         */\n        prerelease?: string,\n        /**\n         * Specific MD5 hash of component's asset\n         */\n        md5?: string,\n        /**\n         * Specific SHA-1 hash of component's asset\n         */\n        sha1?: string,\n        /**\n         * Specific SHA-256 hash of component's asset\n         */\n        sha256?: string,\n        /**\n         * Specific SHA-512 hash of component's asset\n         */\n        sha512?: string,\n        /**\n         * Conan base version\n         */\n        conanBaseVersion?: string,\n        /**\n         * Conan channel\n         */\n        conanChannel?: string,\n        /**\n         * Conan recipe revision\n         */\n        conanRevision?: string,\n        /**\n         * Conan package id\n         */\n        conanPackageId?: string,\n        /**\n         * Conan package revision\n         */\n        conanPackageRevision?: string,\n        /**\n         * Docker image name\n         */\n        dockerImageName?: string,\n        /**\n         * Docker image tag\n         */\n        dockerImageTag?: string,\n        /**\n         * Docker layer ID\n         */\n        dockerLayerId?: string,\n        /**\n         * Docker content digest\n         */\n        dockerContentDigest?: string,\n        /**\n         * Maven groupId\n         */\n        mavenGroupId?: string,\n        /**\n         * Maven artifactId\n         */\n        mavenArtifactId?: string,\n        /**\n         * Maven base version\n         */\n        mavenBaseVersion?: string,\n        /**\n         * Maven extension of component's asset\n         */\n        mavenExtension?: string,\n        /**\n         * Maven classifier of component's asset\n         */\n        mavenClassifier?: string,\n        /**\n         * Group asset version extension classifier\n         */\n        gavec?: string,\n        /**\n         * npm scope\n         */\n        npmScope?: string,\n        /**\n         * npm author\n         */\n        npmAuthor?: string,\n        /**\n         * npm description\n         */\n        npmDescription?: string,\n        /**\n         * npm keywords\n         */\n        npmKeywords?: string,\n        /**\n         * npm license\n         */\n        npmLicense?: string,\n        /**\n         * npm tagged is\n         */\n        npmTaggedIs?: string,\n        /**\n         * npm tagged not\n         */\n        npmTaggedNot?: string,\n        /**\n         * NuGet id\n         */\n        nugetId?: string,\n        /**\n         * NuGet tags\n         */\n        nugetTags?: string,\n        /**\n         * NuGet title\n         */\n        nugetTitle?: string,\n        /**\n         * NuGet authors\n         */\n        nugetAuthors?: string,\n        /**\n         * NuGet description\n         */\n        nugetDescription?: string,\n        /**\n         * NuGet summary\n         */\n        nugetSummary?: string,\n        /**\n         * p2 plugin name\n         */\n        p2PluginName?: string,\n        /**\n         * PyPI classifiers\n         */\n        pypiClassifiers?: string,\n        /**\n         * PyPI description\n         */\n        pypiDescription?: string,\n        /**\n         * PyPI keywords\n         */\n        pypiKeywords?: string,\n        /**\n         * PyPI summary\n         */\n        pypiSummary?: string,\n        /**\n         * RubyGems description\n         */\n        rubygemsDescription?: string,\n        /**\n         * RubyGems platform\n         */\n        rubygemsPlatform?: string,\n        /**\n         * RubyGems summary\n         */\n        rubygemsSummary?: string,\n        /**\n         * Yum architecture\n         */\n        yumArchitecture?: string,\n        /**\n         * Yum package name\n         */\n        yumName?: string,\n    }): CancelablePromise<PageComponentXO> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/search',\n            query: {\n                'continuationToken': continuationToken,\n                'sort': sort,\n                'direction': direction,\n                'timeout': timeout,\n                'q': q,\n                'repository': repository,\n                'format': format,\n                'group': group,\n                'name': name,\n                'version': version,\n                'prerelease': prerelease,\n                'md5': md5,\n                'sha1': sha1,\n                'sha256': sha256,\n                'sha512': sha512,\n                'conan.baseVersion': conanBaseVersion,\n                'conan.channel': conanChannel,\n                'conan.revision': conanRevision,\n                'conan.packageId': conanPackageId,\n                'conan.packageRevision': conanPackageRevision,\n                'docker.imageName': dockerImageName,\n                'docker.imageTag': dockerImageTag,\n                'docker.layerId': dockerLayerId,\n                'docker.contentDigest': dockerContentDigest,\n                'maven.groupId': mavenGroupId,\n                'maven.artifactId': mavenArtifactId,\n                'maven.baseVersion': mavenBaseVersion,\n                'maven.extension': mavenExtension,\n                'maven.classifier': mavenClassifier,\n                'gavec': gavec,\n                'npm.scope': npmScope,\n                'npm.author': npmAuthor,\n                'npm.description': npmDescription,\n                'npm.keywords': npmKeywords,\n                'npm.license': npmLicense,\n                'npm.tagged_is': npmTaggedIs,\n                'npm.tagged_not': npmTaggedNot,\n                'nuget.id': nugetId,\n                'nuget.tags': nugetTags,\n                'nuget.title': nugetTitle,\n                'nuget.authors': nugetAuthors,\n                'nuget.description': nugetDescription,\n                'nuget.summary': nugetSummary,\n                'p2.pluginName': p2PluginName,\n                'pypi.classifiers': pypiClassifiers,\n                'pypi.description': pypiDescription,\n                'pypi.keywords': pypiKeywords,\n                'pypi.summary': pypiSummary,\n                'rubygems.description': rubygemsDescription,\n                'rubygems.platform': rubygemsPlatform,\n                'rubygems.summary': rubygemsSummary,\n                'yum.architecture': yumArchitecture,\n                'yum.name': yumName,\n            },\n        });\n    }\n\n}\n","import {\n  ConfigApi,\n  createApiRef,\n  DiscoveryApi,\n  IdentityApi,\n} from '@backstage/core-plugin-api';\n\nimport {\n  NEXUS_REPOSITORY_MANAGER_ANNOTATIONS,\n  NEXUS_REPOSITORY_MANAGER_EXPERIMENTAL_ANNOTATIONS,\n} from '../../annotations';\nimport { OpenAPI, SearchService } from '../../generated';\nimport type {\n  Annotation,\n  AssetXO,\n  ComponentXO,\n  DockerManifest,\n  SearchServiceQuery,\n} from '../../types';\nimport { isPrimaryAsset } from '../../utils';\n\nconst DEFAULT_PROXY_PATH = '/nexus-repository-manager' as const;\nconst NEXUS_REPOSITORY_MANAGER_CONFIG = {\n  proxyPath: 'nexusRepositoryManager.proxyPath',\n  experimentalAnnotations: 'nexusRepositoryManager.experimentalAnnotations',\n} as const;\n\n/**\n * Indicates that we want manifest v2 schema 2 if possible. It's faster\n * for supporting servers to return and contains size information.\n * @see {@link https://docs.docker.com/registry/spec/manifest-v2-2/#backward-compatibility|Backward compatibility}\n */\nconst DOCKER_MANIFEST_HEADERS = {\n  Accept: [\n    'application/vnd.docker.distribution.manifest.v2+json',\n    'application/vnd.docker.distribution.manifest.v1+json;q=0.9',\n    '*/*;q=0.8',\n  ].join(', '),\n} as const satisfies HeadersInit;\n\nfunction getAdditionalHeaders(format?: string): HeadersInit {\n  switch (format /* NOSONAR - use switch for expandability */) {\n    case 'docker':\n      return DOCKER_MANIFEST_HEADERS;\n    default:\n      return {};\n  }\n}\n\n// Whether an asset has data we might want to fetch\nfunction shouldFetchSize(asset: AssetXO) {\n  if (asset.format !== 'maven2') {\n    return false;\n  }\n\n  if (!asset.maven2) {\n    return false;\n  }\n  return (\n    // Choosing not to care about the size of e.g. sources or javadoc\n    asset.maven2.classifier || !isPrimaryAsset(asset)\n  );\n}\n\nexport type NexusRepositoryManagerApiV1 = {\n  getComponents(query: SearchServiceQuery): Promise<{\n    components: {\n      component: ComponentXO;\n      dockerManifests: (DockerManifest | null)[];\n    }[];\n  }>;\n  getAnnotations(): { ANNOTATIONS: Readonly<Annotation[]> };\n};\n\nexport const NexusRepositoryManagerApiRef =\n  createApiRef<NexusRepositoryManagerApiV1>({\n    id: 'plugin.nexus-repository-manager.service',\n  });\n\nexport type NexusRepositoryManagerApiClientOptions = {\n  discoveryApi: DiscoveryApi;\n  configApi: ConfigApi;\n  identityApi: IdentityApi;\n};\n\nexport class NexusRepositoryManagerApiClient\n  implements NexusRepositoryManagerApiV1\n{\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly configApi: ConfigApi;\n  private readonly identityApi: IdentityApi;\n  private baseUrl = '';\n\n  constructor(options: NexusRepositoryManagerApiClientOptions) {\n    this.discoveryApi = options.discoveryApi;\n    this.configApi = options.configApi;\n    this.identityApi = options.identityApi;\n  }\n\n  private async getBaseUrl() {\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n\n    const proxyPath =\n      this.configApi.getOptionalString(\n        NEXUS_REPOSITORY_MANAGER_CONFIG.proxyPath,\n      ) ?? DEFAULT_PROXY_PATH;\n    this.baseUrl = `${await this.discoveryApi.getBaseUrl('proxy')}${proxyPath}`;\n    return this.baseUrl;\n  }\n\n  private async proxiedDownloadUrl(asset: AssetXO) {\n    const proxyUrl = await this.getBaseUrl();\n    return `${proxyUrl}/repository/${asset.repository}/${asset.path}`;\n  }\n\n  private async searchServiceFetcher(url: string, query: SearchServiceQuery) {\n    const { token: idToken } = await this.identityApi.getCredentials();\n\n    OpenAPI.BASE = url;\n    OpenAPI.TOKEN = idToken;\n\n    return await SearchService.search(query);\n  }\n\n  private async fetcher(\n    url: string,\n    additionalHeaders: HeadersInit = {},\n    method: string = 'GET',\n  ) {\n    const { token: idToken } = await this.identityApi.getCredentials();\n\n    const headers = new Headers(additionalHeaders);\n\n    if (idToken) {\n      headers.set('Authorization', `Bearer ${idToken}`);\n    }\n\n    const response = await fetch(url, { headers, method });\n    if (!response.ok) {\n      throw new Error(\n        `failed to fetch data, status ${response.status}: ${response.statusText}`,\n      );\n    }\n    return response;\n  }\n\n  /**\n   * Use HEAD requests to get the size of each asset we care about, as nexus\n   * doesn't return that information in the search API.\n   * Only supports maven for now.\n   */\n  private async addFileSizes(component: ComponentXO): Promise<ComponentXO> {\n    if (component.format !== 'maven2' || !component.assets) {\n      return component;\n    }\n\n    const headers = getAdditionalHeaders(component.format);\n\n    const updatedAssets = await Promise.all(\n      component.assets.map(async asset => {\n        // Save a request if Nexus decides to return a size (unknown if possible)\n        if (asset.fileSize !== 0 || shouldFetchSize(asset)) {\n          return asset;\n        }\n\n        const response = await this.fetcher(\n          await this.proxiedDownloadUrl(asset),\n          headers,\n          'HEAD',\n        );\n\n        return {\n          ...asset,\n          fileSize: Number(response.headers.get('Content-Length')) || 0,\n        };\n      }),\n    );\n\n    return {\n      ...component,\n      assets: updatedAssets,\n    };\n  }\n\n  private async getDockerManifests(component: ComponentXO) {\n    // We only need to fetch the actual assets (manifests) for docker\n    if (component.format !== 'docker') {\n      return [];\n    }\n\n    const additionalHeaders = getAdditionalHeaders(component.format);\n\n    const assets = await Promise.all(\n      component.assets?.map(\n        async asset =>\n          (\n            await this.fetcher(\n              await this.proxiedDownloadUrl(asset),\n              additionalHeaders,\n            )\n          ).json() as Promise<DockerManifest>,\n        // Create a dummy promise to avoid Promise.all() from failing\n      ) ?? [new Promise<null>(() => null)],\n    );\n\n    return assets;\n  }\n\n  async getComponents(query: SearchServiceQuery) {\n    const proxyUrl = await this.getBaseUrl();\n\n    const components: ComponentXO[] = [];\n    let continuationToken: undefined | string;\n\n    do {\n      const res = await this.searchServiceFetcher(`${proxyUrl}/service/rest`, {\n        ...query,\n        continuationToken,\n      });\n\n      continuationToken = res.continuationToken;\n      components.push(...(res.items ?? []));\n    } while (continuationToken);\n\n    // TODO make resilient to individual errors\n    // We're seeing intermittent 504s that stop the whole request\n    const values = await Promise.all(\n      components.map(async component => ({\n        component: await this.addFileSizes(component),\n        dockerManifests: await this.getDockerManifests(component),\n      })),\n    );\n\n    const filteredValues = values.filter(\n      v => v.component?.assets?.some(asset => isPrimaryAsset(asset)),\n    );\n\n    return {\n      components: filteredValues,\n    };\n  }\n\n  getAnnotations() {\n    const usesExperimental = this.configApi.getOptionalBoolean(\n      NEXUS_REPOSITORY_MANAGER_CONFIG.experimentalAnnotations,\n    );\n\n    if (usesExperimental) {\n      return {\n        ANNOTATIONS: [\n          ...NEXUS_REPOSITORY_MANAGER_ANNOTATIONS,\n          ...NEXUS_REPOSITORY_MANAGER_EXPERIMENTAL_ANNOTATIONS,\n        ],\n      };\n    }\n\n    return { ANNOTATIONS: NEXUS_REPOSITORY_MANAGER_ANNOTATIONS };\n  }\n}\n","import { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'nexus-repository-manager',\n});\n","import { type Entity } from '@backstage/catalog-model';\nimport {\n  configApiRef,\n  createApiFactory,\n  createComponentExtension,\n  createPlugin,\n  discoveryApiRef,\n  identityApiRef,\n} from '@backstage/core-plugin-api';\n\nimport {\n  NEXUS_REPOSITORY_MANAGER_ANNOTATIONS,\n  NEXUS_REPOSITORY_MANAGER_EXPERIMENTAL_ANNOTATIONS,\n} from './annotations';\nimport {\n  NexusRepositoryManagerApiClient,\n  NexusRepositoryManagerApiRef,\n} from './api';\nimport { rootRouteRef } from './routes';\n\nexport const nexusRepositoryManagerPlugin = createPlugin({\n  id: 'nexus-repository-manager',\n  routes: {\n    root: rootRouteRef,\n  },\n  apis: [\n    createApiFactory({\n      api: NexusRepositoryManagerApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        configApi: configApiRef,\n        identityApi: identityApiRef,\n      },\n      factory: ({ discoveryApi, configApi, identityApi }) =>\n        new NexusRepositoryManagerApiClient({\n          discoveryApi,\n          configApi,\n          identityApi,\n        }),\n    }),\n  ],\n});\n\nexport const NexusRepositoryManagerPage = nexusRepositoryManagerPlugin.provide(\n  createComponentExtension({\n    name: 'NexusRepositoryManagerPage',\n    component: {\n      lazy: () => import('./components').then(m => m.NexusRepositoryManager),\n    },\n  }),\n);\n\nexport const isNexusRepositoryManagerAvailable = (entity: Entity) =>\n  NEXUS_REPOSITORY_MANAGER_ANNOTATIONS.some(value =>\n    Boolean(entity.metadata.annotations?.[value.annotation]),\n  );\n\nexport const isNexusRepositoryManagerExperimentalAvailable = (entity: Entity) =>\n  isNexusRepositoryManagerAvailable(entity) ||\n  NEXUS_REPOSITORY_MANAGER_EXPERIMENTAL_ANNOTATIONS.some(value =>\n    Boolean(entity.metadata.annotations?.[value.annotation]),\n  );\n","import { ComponentXO, DockerManifest } from '../../types';\n\nexport function getFileSize({\n  component,\n  dockerManifests,\n}: {\n  component: ComponentXO;\n  dockerManifests: (DockerManifest | null)[];\n}) {\n  const componentsSize =\n    component.assets?.reduce((acc, asset) => {\n      return acc + (asset.fileSize ?? 0);\n    }, 0) ?? 0;\n\n  const dockerManifestsSize = dockerManifests.reduce((acc, dockerManifest) => {\n    if (!dockerManifest) {\n      return acc;\n    }\n\n    if (dockerManifest.schemaVersion === 1) {\n      return acc;\n    }\n\n    const layerSize = dockerManifest.layers.reduce((layerAcc, layer) => {\n      return layerAcc + layer.size;\n    }, 0);\n\n    return acc + dockerManifest.config.size + layerSize;\n  }, 0);\n\n  return componentsSize + dockerManifestsSize;\n}\n","import { AssetHash, AssetXO } from '../../types';\n\nexport function getHash(asset: AssetXO | undefined): AssetHash | undefined {\n  if (!asset?.checksum) {\n    return undefined;\n  }\n\n  // SHA-1/MD5 are the defaults for Maven\n  // SHA-1 picked over MD5 as it seems to always be present\n  // @see {@link https://maven.apache.org/resolver/about-checksums.html}\n  if (asset.format === 'maven2' && 'sha1' in asset.checksum) {\n    return {\n      algorithm: 'sha1',\n      value: String(asset.checksum.sha1),\n    };\n  }\n\n  // The checksum should be present with a sha256\n  if ('sha256' in asset.checksum) {\n    return {\n      algorithm: 'sha256',\n      value: String(asset.checksum.sha256),\n    };\n  }\n\n  return undefined;\n}\n","import type { AssetXO } from '../../types';\n\n// Extensions we don't want to fetch extra data for, and don't want to display\n// as their own entity.\nconst MAVEN_IGNORED_ASSET_EXTENSIONS = new Set<string>([\n  'pom',\n  'sha1',\n  'md5',\n  'sha256',\n]);\n\n// Whether an asset has data we might want to fetch, and/or display as its own\n// entity.\nexport function isPrimaryAsset(asset: AssetXO): boolean {\n  if (!asset.maven2) {\n    return true;\n  }\n  const { extension } = asset.maven2;\n  if (extension === undefined) {\n    return true;\n  }\n  // Extension can be `jar.md5` or `zip.sha1`, for example\n  return !MAVEN_IGNORED_ASSET_EXTENSIONS.has(extension.split('.').pop() ?? '');\n}\n"],"names":["NEXUS_REPOSITORY_MANAGER_CONFIG_ANNOTATIONS","annotation","NEXUS_REPOSITORY_MANAGER_ANNOTATIONS","query","str","dockerImageName","dockerImageTag","dockerLayerId","dockerContentDigest","NEXUS_REPOSITORY_MANAGER_EXPERIMENTAL_ANNOTATIONS","q","repository","format","group","name","version","prerelease","md5","sha1","sha256","sha512","conanBaseVersion","conanChannel","conanRevision","conanPackageId","conanPackageRevision","mavenGroupId","mavenArtifactId","mavenBaseVersion","mavenExtension","mavenClassifier","gavec","npmScope","npmAuthor","npmDescription","npmKeywords","npmLicense","npmTaggedIs","npmTaggedNot","nugetId","nugetTags","nugetTitle","nugetAuthors","nugetDescription","nugetSummary","p2PluginName","pypiClassifiers","pypiDescription","pypiKeywords","pypiSummary","rubygemsDescription","rubygemsPlatform","rubygemsSummary","yumArchitecture","yumName","CancelError","Error","isCancelled","constructor","message","super","this","Symbol","toStringTag","CancelablePromise","then","onFulfilled","onRejected","promise","catch","finally","onFinally","cancel","isResolved","isRejected","cancelHandlers","length","cancelHandler","error","console","warn","reject","executor","Promise","resolve","onCancel","push","Object","defineProperty","get","value","reason","OpenAPI","BASE","VERSION","WITH_CREDENTIALS","CREDENTIALS","TOKEN","undefined","USERNAME","PASSWORD","HEADERS","ENCODE_PATH","ApiError","request","response","url","status","statusText","body","isDefined","isString","isStringWithValue","isBlob","type","stream","arrayBuffer","test","isFormData","FormData","async","options","resolver","getHeaders","config","token","username","password","additionalHeaders","headers","entries","Accept","filter","_","reduce","key","String","credentials","btoa","err","Buffer","from","toString","base64","mediaType","Headers","encoder","encodeURI","path","replace","substring","hasOwnProperty","params","qs","process","Array","isArray","forEach","v","k","encodeURIComponent","append","join","getQueryString","getUrl","formData","JSON","stringify","getFormData","includes","getRequestBody","controller","AbortController","method","signal","abort","fetch","sendRequest","responseBody","contentType","some","toLowerCase","startsWith","json","text","getResponseBody","responseHeader","content","getResponseHeader","result","ok","errors","errorStatus","errorStatusText","errorBody","e","catchErrorCodes","SearchService","searchAssets","continuationToken","sort","direction","timeout","__request","searchAndDownloadAssets","search","DOCKER_MANIFEST_HEADERS","getAdditionalHeaders","NexusRepositoryManagerApiRef","createApiRef","id","NexusRepositoryManagerApiClient","getBaseUrl","baseUrl","proxyPath","configApi","getOptionalString","discoveryApi","proxiedDownloadUrl","asset","searchServiceFetcher","idToken","identityApi","getCredentials","fetcher","set","addFileSizes","component","assets","updatedAssets","all","map","fileSize","maven2","classifier","isPrimaryAsset","shouldFetchSize","Number","getDockerManifests","getComponents","proxyUrl","components","res","items","dockerManifests","getAnnotations","getOptionalBoolean","ANNOTATIONS","rootRouteRef","createRouteRef","nexusRepositoryManagerPlugin","createPlugin","routes","root","apis","createApiFactory","api","deps","discoveryApiRef","configApiRef","identityApiRef","factory","NexusRepositoryManagerPage","provide","createComponentExtension","lazy","m","NexusRepositoryManager","isNexusRepositoryManagerAvailable","entity","Boolean","metadata","annotations","isNexusRepositoryManagerExperimentalAvailable","getFileSize","acc","dockerManifest","schemaVersion","layerSize","layers","layerAcc","layer","size","getHash","checksum","algorithm","MAVEN_IGNORED_ASSET_EXTENSIONS","Set","extension","has","split","pop"],"sourceRoot":""}