{"version":3,"file":"index-496595d6.esm.js","sources":["../../src/annotations.ts","../../src/generated/core/ApiError.ts","../../src/generated/core/CancelablePromise.ts","../../src/generated/core/OpenAPI.ts","../../src/generated/core/request.ts","../../src/generated/services/SearchService.ts","../../src/utils/is-primary-asset/is-primary-asset.ts","../../src/api/nexus-repository-manager-api-client/nexus-repository-manager-api-client.ts","../../src/routes.ts","../../src/plugin.ts"],"sourcesContent":["import type { Annotation } from './types';\n\nexport const NEXUS_REPOSITORY_MANAGER_CONFIG_ANNOTATIONS = [\n  {\n    annotation: 'nexus-repository-manager/config.title',\n  },\n] as const satisfies Readonly<Annotation[]>;\n\nexport const NEXUS_REPOSITORY_MANAGER_ANNOTATIONS = [\n  {\n    annotation: 'nexus-repository-manager/docker.image-name',\n    query: str => ({\n      dockerImageName: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/docker.image-tag',\n    query: str => ({\n      dockerImageTag: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/docker.layer-id',\n    query: str => ({\n      dockerLayerId: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/docker.content-digest',\n    query: str => ({\n      dockerContentDigest: str,\n    }),\n  },\n] as const satisfies Readonly<Annotation[]>;\n\nexport const NEXUS_REPOSITORY_MANAGER_EXPERIMENTAL_ANNOTATIONS = [\n  {\n    annotation: 'nexus-repository-manager/keyword',\n    query: str => ({\n      q: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/repository',\n    query: str => ({\n      repository: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/format',\n    query: str => ({\n      format: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/group',\n    query: str => ({\n      group: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/name',\n    query: str => ({\n      name: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/version',\n    query: str => ({\n      version: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/prerelease',\n    query: str => ({\n      prerelease: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/md5',\n    query: str => ({\n      md5: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/sha1',\n    query: str => ({\n      sha1: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/sha256',\n    query: str => ({\n      sha256: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/sha512',\n    query: str => ({\n      sha512: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/conan.base-version',\n    query: str => ({\n      conanBaseVersion: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/conan.channel',\n    query: str => ({\n      conanChannel: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/conan.revision',\n    query: str => ({\n      conanRevision: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/conan.package-id',\n    query: str => ({\n      conanPackageId: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/conan.package-revision',\n    query: str => ({\n      conanPackageRevision: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/maven.group-id',\n    query: str => ({\n      mavenGroupId: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/maven.artifact-id',\n    query: str => ({\n      mavenArtifactId: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/maven.base-version',\n    query: str => ({\n      mavenBaseVersion: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/maven.extension',\n    query: str => ({\n      mavenExtension: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/maven.classifier',\n    query: str => ({\n      mavenClassifier: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/gavec',\n    query: str => ({\n      gavec: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.scope',\n    query: str => ({\n      npmScope: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.author',\n    query: str => ({\n      npmAuthor: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.description',\n    query: str => ({\n      npmDescription: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.keywords',\n    query: str => ({\n      npmKeywords: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.license',\n    query: str => ({\n      npmLicense: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.tagged-is',\n    query: str => ({\n      npmTaggedIs: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/npm.tagged-not',\n    query: str => ({\n      npmTaggedNot: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.id',\n    query: str => ({\n      nugetId: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.tags',\n    query: str => ({\n      nugetTags: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.title',\n    query: str => ({\n      nugetTitle: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.authors',\n    query: str => ({\n      nugetAuthors: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.description',\n    query: str => ({\n      nugetDescription: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/nuget.summary',\n    query: str => ({\n      nugetSummary: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/p2.plugin-name',\n    query: str => ({\n      p2PluginName: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/pypi.classifiers',\n    query: str => ({\n      pypiClassifiers: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/pypi.description',\n    query: str => ({\n      pypiDescription: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/pypi.keywords',\n    query: str => ({\n      pypiKeywords: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/pypi.summary',\n    query: str => ({\n      pypiSummary: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/rubygems.description',\n    query: str => ({\n      rubygemsDescription: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/rubygems.platform',\n    query: str => ({\n      rubygemsPlatform: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/rubygems.summary',\n    query: str => ({\n      rubygemsSummary: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/yum.architecture',\n    query: str => ({\n      yumArchitecture: str,\n    }),\n  },\n  {\n    annotation: 'nexus-repository-manager/yum.name',\n    query: str => ({\n      yumName: str,\n    }),\n  },\n] as const satisfies Readonly<Annotation[]>;\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\n\nexport class ApiError extends Error {\n    public readonly url: string;\n    public readonly status: number;\n    public readonly statusText: string;\n    public readonly body: any;\n    public readonly request: ApiRequestOptions;\n\n    constructor(request: ApiRequestOptions, response: ApiResult, message: string) {\n        super(message);\n\n        this.name = 'ApiError';\n        this.url = response.url;\n        this.status = response.status;\n        this.statusText = response.statusText;\n        this.body = response.body;\n        this.request = request;\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nexport class CancelError extends Error {\n\n    constructor(message: string) {\n        super(message);\n        this.name = 'CancelError';\n    }\n\n    public get isCancelled(): boolean {\n        return true;\n    }\n}\n\nexport interface OnCancel {\n    readonly isResolved: boolean;\n    readonly isRejected: boolean;\n    readonly isCancelled: boolean;\n\n    (cancelHandler: () => void): void;\n}\n\nexport class CancelablePromise<T> implements Promise<T> {\n    #isResolved: boolean;\n    #isRejected: boolean;\n    #isCancelled: boolean;\n    readonly #cancelHandlers: (() => void)[];\n    readonly #promise: Promise<T>;\n    #resolve?: (value: T | PromiseLike<T>) => void;\n    #reject?: (reason?: any) => void;\n\n    constructor(\n        executor: (\n            resolve: (value: T | PromiseLike<T>) => void,\n            reject: (reason?: any) => void,\n            onCancel: OnCancel\n        ) => void\n    ) {\n        this.#isResolved = false;\n        this.#isRejected = false;\n        this.#isCancelled = false;\n        this.#cancelHandlers = [];\n        this.#promise = new Promise<T>((resolve, reject) => {\n            this.#resolve = resolve;\n            this.#reject = reject;\n\n            const onResolve = (value: T | PromiseLike<T>): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isResolved = true;\n                this.#resolve?.(value);\n            };\n\n            const onReject = (reason?: any): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#isRejected = true;\n                this.#reject?.(reason);\n            };\n\n            const onCancel = (cancelHandler: () => void): void => {\n                if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n                    return;\n                }\n                this.#cancelHandlers.push(cancelHandler);\n            };\n\n            Object.defineProperty(onCancel, 'isResolved', {\n                get: (): boolean => this.#isResolved,\n            });\n\n            Object.defineProperty(onCancel, 'isRejected', {\n                get: (): boolean => this.#isRejected,\n            });\n\n            Object.defineProperty(onCancel, 'isCancelled', {\n                get: (): boolean => this.#isCancelled,\n            });\n\n            return executor(onResolve, onReject, onCancel as OnCancel);\n        });\n    }\n\n     get [Symbol.toStringTag]() {\n            return \"Cancellable Promise\";\n     }\n\n    public then<TResult1 = T, TResult2 = never>(\n        onFulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | null,\n        onRejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | null\n    ): Promise<TResult1 | TResult2> {\n        return this.#promise.then(onFulfilled, onRejected);\n    }\n\n    public catch<TResult = never>(\n        onRejected?: ((reason: any) => TResult | PromiseLike<TResult>) | null\n    ): Promise<T | TResult> {\n        return this.#promise.catch(onRejected);\n    }\n\n    public finally(onFinally?: (() => void) | null): Promise<T> {\n        return this.#promise.finally(onFinally);\n    }\n\n    public cancel(): void {\n        if (this.#isResolved || this.#isRejected || this.#isCancelled) {\n            return;\n        }\n        this.#isCancelled = true;\n        if (this.#cancelHandlers.length) {\n            try {\n                for (const cancelHandler of this.#cancelHandlers) {\n                    cancelHandler();\n                }\n            } catch (error) {\n                console.warn('Cancellation threw an error', error);\n                return;\n            }\n        }\n        this.#cancelHandlers.length = 0;\n        this.#reject?.(new CancelError('Request aborted'));\n    }\n\n    public get isCancelled(): boolean {\n        return this.#isCancelled;\n    }\n}\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { ApiRequestOptions } from './ApiRequestOptions';\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\ntype Headers = Record<string, string>;\n\nexport type OpenAPIConfig = {\n    BASE: string;\n    VERSION: string;\n    WITH_CREDENTIALS: boolean;\n    CREDENTIALS: 'include' | 'omit' | 'same-origin';\n    TOKEN?: string | Resolver<string> | undefined;\n    USERNAME?: string | Resolver<string> | undefined;\n    PASSWORD?: string | Resolver<string> | undefined;\n    HEADERS?: Headers | Resolver<Headers> | undefined;\n    ENCODE_PATH?: ((path: string) => string) | undefined;\n};\n\nexport const OpenAPI: OpenAPIConfig = {\n    BASE: '/service/rest',\n    VERSION: '3.58.1-02',\n    WITH_CREDENTIALS: false,\n    CREDENTIALS: 'include',\n    TOKEN: undefined,\n    USERNAME: undefined,\n    PASSWORD: undefined,\n    HEADERS: undefined,\n    ENCODE_PATH: undefined,\n};\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport { ApiError } from './ApiError';\nimport type { ApiRequestOptions } from './ApiRequestOptions';\nimport type { ApiResult } from './ApiResult';\nimport { CancelablePromise } from './CancelablePromise';\nimport type { OnCancel } from './CancelablePromise';\nimport type { OpenAPIConfig } from './OpenAPI';\n\nexport const isDefined = <T>(value: T | null | undefined): value is Exclude<T, null | undefined> => {\n    return value !== undefined && value !== null;\n};\n\nexport const isString = (value: any): value is string => {\n    return typeof value === 'string';\n};\n\nexport const isStringWithValue = (value: any): value is string => {\n    return isString(value) && value !== '';\n};\n\nexport const isBlob = (value: any): value is Blob => {\n    return (\n        typeof value === 'object' &&\n        typeof value.type === 'string' &&\n        typeof value.stream === 'function' &&\n        typeof value.arrayBuffer === 'function' &&\n        typeof value.constructor === 'function' &&\n        typeof value.constructor.name === 'string' &&\n        /^(Blob|File)$/.test(value.constructor.name) &&\n        /^(Blob|File)$/.test(value[Symbol.toStringTag])\n    );\n};\n\nexport const isFormData = (value: any): value is FormData => {\n    return value instanceof FormData;\n};\n\nexport const base64 = (str: string): string => {\n    try {\n        return btoa(str);\n    } catch (err) {\n        // @ts-ignore\n        return Buffer.from(str).toString('base64');\n    }\n};\n\nexport const getQueryString = (params: Record<string, any>): string => {\n    const qs: string[] = [];\n\n    const append = (key: string, value: any) => {\n        qs.push(`${encodeURIComponent(key)}=${encodeURIComponent(String(value))}`);\n    };\n\n    const process = (key: string, value: any) => {\n        if (isDefined(value)) {\n            if (Array.isArray(value)) {\n                value.forEach(v => {\n                    process(key, v);\n                });\n            } else if (typeof value === 'object') {\n                Object.entries(value).forEach(([k, v]) => {\n                    process(`${key}[${k}]`, v);\n                });\n            } else {\n                append(key, value);\n            }\n        }\n    };\n\n    Object.entries(params).forEach(([key, value]) => {\n        process(key, value);\n    });\n\n    if (qs.length > 0) {\n        return `?${qs.join('&')}`;\n    }\n\n    return '';\n};\n\nconst getUrl = (config: OpenAPIConfig, options: ApiRequestOptions): string => {\n    const encoder = config.ENCODE_PATH || encodeURI;\n\n    const path = options.url\n        .replace('{api-version}', config.VERSION)\n        .replace(/{(.*?)}/g, (substring: string, group: string) => {\n            if (options.path?.hasOwnProperty(group)) {\n                return encoder(String(options.path[group]));\n            }\n            return substring;\n        });\n\n    const url = `${config.BASE}${path}`;\n    if (options.query) {\n        return `${url}${getQueryString(options.query)}`;\n    }\n    return url;\n};\n\nexport const getFormData = (options: ApiRequestOptions): FormData | undefined => {\n    if (options.formData) {\n        const formData = new FormData();\n\n        const process = (key: string, value: any) => {\n            if (isString(value) || isBlob(value)) {\n                formData.append(key, value);\n            } else {\n                formData.append(key, JSON.stringify(value));\n            }\n        };\n\n        Object.entries(options.formData)\n            .filter(([_, value]) => isDefined(value))\n            .forEach(([key, value]) => {\n                if (Array.isArray(value)) {\n                    value.forEach(v => process(key, v));\n                } else {\n                    process(key, value);\n                }\n            });\n\n        return formData;\n    }\n    return undefined;\n};\n\ntype Resolver<T> = (options: ApiRequestOptions) => Promise<T>;\n\nexport const resolve = async <T>(options: ApiRequestOptions, resolver?: T | Resolver<T>): Promise<T | undefined> => {\n    if (typeof resolver === 'function') {\n        return (resolver as Resolver<T>)(options);\n    }\n    return resolver;\n};\n\nexport const getHeaders = async (config: OpenAPIConfig, options: ApiRequestOptions): Promise<Headers> => {\n    const token = await resolve(options, config.TOKEN);\n    const username = await resolve(options, config.USERNAME);\n    const password = await resolve(options, config.PASSWORD);\n    const additionalHeaders = await resolve(options, config.HEADERS);\n\n    const headers = Object.entries({\n        Accept: 'application/json',\n        ...additionalHeaders,\n        ...options.headers,\n    })\n        .filter(([_, value]) => isDefined(value))\n        .reduce((headers, [key, value]) => ({\n            ...headers,\n            [key]: String(value),\n        }), {} as Record<string, string>);\n\n    if (isStringWithValue(token)) {\n        headers['Authorization'] = `Bearer ${token}`;\n    }\n\n    if (isStringWithValue(username) && isStringWithValue(password)) {\n        const credentials = base64(`${username}:${password}`);\n        headers['Authorization'] = `Basic ${credentials}`;\n    }\n\n    if (options.body) {\n        if (options.mediaType) {\n            headers['Content-Type'] = options.mediaType;\n        } else if (isBlob(options.body)) {\n            headers['Content-Type'] = options.body.type || 'application/octet-stream';\n        } else if (isString(options.body)) {\n            headers['Content-Type'] = 'text/plain';\n        } else if (!isFormData(options.body)) {\n            headers['Content-Type'] = 'application/json';\n        }\n    }\n\n    return new Headers(headers);\n};\n\nexport const getRequestBody = (options: ApiRequestOptions): any => {\n    if (options.body !== undefined) {\n        if (options.mediaType?.includes('/json')) {\n            return JSON.stringify(options.body)\n        } else if (isString(options.body) || isBlob(options.body) || isFormData(options.body)) {\n            return options.body;\n        } else {\n            return JSON.stringify(options.body);\n        }\n    }\n    return undefined;\n};\n\nexport const sendRequest = async (\n    config: OpenAPIConfig,\n    options: ApiRequestOptions,\n    url: string,\n    body: any,\n    formData: FormData | undefined,\n    headers: Headers,\n    onCancel: OnCancel\n): Promise<Response> => {\n    const controller = new AbortController();\n\n    const request: RequestInit = {\n        headers,\n        body: body ?? formData,\n        method: options.method,\n        signal: controller.signal,\n    };\n\n    if (config.WITH_CREDENTIALS) {\n        request.credentials = config.CREDENTIALS;\n    }\n\n    onCancel(() => controller.abort());\n\n    return await fetch(url, request);\n};\n\nexport const getResponseHeader = (response: Response, responseHeader?: string): string | undefined => {\n    if (responseHeader) {\n        const content = response.headers.get(responseHeader);\n        if (isString(content)) {\n            return content;\n        }\n    }\n    return undefined;\n};\n\nexport const getResponseBody = async (response: Response): Promise<any> => {\n    if (response.status !== 204) {\n        try {\n            const contentType = response.headers.get('Content-Type');\n            if (contentType) {\n                const jsonTypes = ['application/json', 'application/problem+json']\n                const isJSON = jsonTypes.some(type => contentType.toLowerCase().startsWith(type));\n                if (isJSON) {\n                    return await response.json();\n                } else {\n                    return await response.text();\n                }\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    }\n    return undefined;\n};\n\nexport const catchErrorCodes = (options: ApiRequestOptions, result: ApiResult): void => {\n    const errors: Record<number, string> = {\n        400: 'Bad Request',\n        401: 'Unauthorized',\n        403: 'Forbidden',\n        404: 'Not Found',\n        500: 'Internal Server Error',\n        502: 'Bad Gateway',\n        503: 'Service Unavailable',\n        ...options.errors,\n    }\n\n    const error = errors[result.status];\n    if (error) {\n        throw new ApiError(options, result, error);\n    }\n\n    if (!result.ok) {\n        const errorStatus = result.status ?? 'unknown';\n        const errorStatusText = result.statusText ?? 'unknown';\n        const errorBody = (() => {\n            try {\n                return JSON.stringify(result.body, null, 2);\n            } catch (e) {\n                return undefined;\n            }\n        })();\n\n        throw new ApiError(options, result,\n            `Generic Error: status: ${errorStatus}; status text: ${errorStatusText}; body: ${errorBody}`\n        );\n    }\n};\n\n/**\n * Request method\n * @param config The OpenAPI configuration object\n * @param options The request options from the service\n * @returns CancelablePromise<T>\n * @throws ApiError\n */\nexport const request = <T>(config: OpenAPIConfig, options: ApiRequestOptions): CancelablePromise<T> => {\n    return new CancelablePromise(async (resolve, reject, onCancel) => {\n        try {\n            const url = getUrl(config, options);\n            const formData = getFormData(options);\n            const body = getRequestBody(options);\n            const headers = await getHeaders(config, options);\n\n            if (!onCancel.isCancelled) {\n                const response = await sendRequest(config, options, url, body, formData, headers, onCancel);\n                const responseBody = await getResponseBody(response);\n                const responseHeader = getResponseHeader(response, options.responseHeader);\n\n                const result: ApiResult = {\n                    url,\n                    ok: response.ok,\n                    status: response.status,\n                    statusText: response.statusText,\n                    body: responseHeader ?? responseBody,\n                };\n\n                catchErrorCodes(options, result);\n\n                resolve(result.body);\n            }\n        } catch (error) {\n            reject(error);\n        }\n    });\n};\n","/* generated using openapi-typescript-codegen -- do no edit */\n/* istanbul ignore file */\n/* tslint:disable */\n/* eslint-disable */\nimport type { PageAssetXO } from '../models/PageAssetXO';\nimport type { PageComponentXO } from '../models/PageComponentXO';\n\nimport type { CancelablePromise } from '../core/CancelablePromise';\nimport { OpenAPI } from '../core/OpenAPI';\nimport { request as __request } from '../core/request';\n\nexport class SearchService {\n\n    /**\n     * Search assets\n     * @returns PageAssetXO successful operation\n     * @throws ApiError\n     */\n    public static searchAssets({\n        continuationToken,\n        sort,\n        direction,\n        timeout,\n        q,\n        repository,\n        format,\n        group,\n        name,\n        version,\n        prerelease,\n        md5,\n        sha1,\n        sha256,\n        sha512,\n        conanBaseVersion,\n        conanChannel,\n        conanRevision,\n        conanPackageId,\n        conanPackageRevision,\n        dockerImageName,\n        dockerImageTag,\n        dockerLayerId,\n        dockerContentDigest,\n        mavenGroupId,\n        mavenArtifactId,\n        mavenBaseVersion,\n        mavenExtension,\n        mavenClassifier,\n        gavec,\n        npmScope,\n        npmAuthor,\n        npmDescription,\n        npmKeywords,\n        npmLicense,\n        npmTaggedIs,\n        npmTaggedNot,\n        nugetId,\n        nugetTags,\n        nugetTitle,\n        nugetAuthors,\n        nugetDescription,\n        nugetSummary,\n        p2PluginName,\n        pypiClassifiers,\n        pypiDescription,\n        pypiKeywords,\n        pypiSummary,\n        rubygemsDescription,\n        rubygemsPlatform,\n        rubygemsSummary,\n        yumArchitecture,\n        yumName,\n    }: {\n        /**\n         * A token returned by a prior request. If present, the next page of results are returned\n         */\n        continuationToken?: string,\n        /**\n         * The field to sort the results against, if left empty, a sort based on match weight will be used.\n         */\n        sort?: 'group' | 'name' | 'version' | 'repository',\n        /**\n         * The direction to sort records in, defaults to ascending ('asc') for all sort fields, except version, which defaults to descending ('desc')\n         */\n        direction?: 'asc' | 'desc',\n        /**\n         * How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used.\n         */\n        timeout?: number,\n        /**\n         * Query by keyword\n         */\n        q?: string,\n        /**\n         * Repository name\n         */\n        repository?: string,\n        /**\n         * Query by format\n         */\n        format?: string,\n        /**\n         * Component group\n         */\n        group?: string,\n        /**\n         * Component name\n         */\n        name?: string,\n        /**\n         * Component version\n         */\n        version?: string,\n        /**\n         * Prerelease version flag\n         */\n        prerelease?: string,\n        /**\n         * Specific MD5 hash of component's asset\n         */\n        md5?: string,\n        /**\n         * Specific SHA-1 hash of component's asset\n         */\n        sha1?: string,\n        /**\n         * Specific SHA-256 hash of component's asset\n         */\n        sha256?: string,\n        /**\n         * Specific SHA-512 hash of component's asset\n         */\n        sha512?: string,\n        /**\n         * Conan base version\n         */\n        conanBaseVersion?: string,\n        /**\n         * Conan channel\n         */\n        conanChannel?: string,\n        /**\n         * Conan recipe revision\n         */\n        conanRevision?: string,\n        /**\n         * Conan package id\n         */\n        conanPackageId?: string,\n        /**\n         * Conan package revision\n         */\n        conanPackageRevision?: string,\n        /**\n         * Docker image name\n         */\n        dockerImageName?: string,\n        /**\n         * Docker image tag\n         */\n        dockerImageTag?: string,\n        /**\n         * Docker layer ID\n         */\n        dockerLayerId?: string,\n        /**\n         * Docker content digest\n         */\n        dockerContentDigest?: string,\n        /**\n         * Maven groupId\n         */\n        mavenGroupId?: string,\n        /**\n         * Maven artifactId\n         */\n        mavenArtifactId?: string,\n        /**\n         * Maven base version\n         */\n        mavenBaseVersion?: string,\n        /**\n         * Maven extension of component's asset\n         */\n        mavenExtension?: string,\n        /**\n         * Maven classifier of component's asset\n         */\n        mavenClassifier?: string,\n        /**\n         * Group asset version extension classifier\n         */\n        gavec?: string,\n        /**\n         * npm scope\n         */\n        npmScope?: string,\n        /**\n         * npm author\n         */\n        npmAuthor?: string,\n        /**\n         * npm description\n         */\n        npmDescription?: string,\n        /**\n         * npm keywords\n         */\n        npmKeywords?: string,\n        /**\n         * npm license\n         */\n        npmLicense?: string,\n        /**\n         * npm tagged is\n         */\n        npmTaggedIs?: string,\n        /**\n         * npm tagged not\n         */\n        npmTaggedNot?: string,\n        /**\n         * NuGet id\n         */\n        nugetId?: string,\n        /**\n         * NuGet tags\n         */\n        nugetTags?: string,\n        /**\n         * NuGet title\n         */\n        nugetTitle?: string,\n        /**\n         * NuGet authors\n         */\n        nugetAuthors?: string,\n        /**\n         * NuGet description\n         */\n        nugetDescription?: string,\n        /**\n         * NuGet summary\n         */\n        nugetSummary?: string,\n        /**\n         * p2 plugin name\n         */\n        p2PluginName?: string,\n        /**\n         * PyPI classifiers\n         */\n        pypiClassifiers?: string,\n        /**\n         * PyPI description\n         */\n        pypiDescription?: string,\n        /**\n         * PyPI keywords\n         */\n        pypiKeywords?: string,\n        /**\n         * PyPI summary\n         */\n        pypiSummary?: string,\n        /**\n         * RubyGems description\n         */\n        rubygemsDescription?: string,\n        /**\n         * RubyGems platform\n         */\n        rubygemsPlatform?: string,\n        /**\n         * RubyGems summary\n         */\n        rubygemsSummary?: string,\n        /**\n         * Yum architecture\n         */\n        yumArchitecture?: string,\n        /**\n         * Yum package name\n         */\n        yumName?: string,\n    }): CancelablePromise<PageAssetXO> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/search/assets',\n            query: {\n                'continuationToken': continuationToken,\n                'sort': sort,\n                'direction': direction,\n                'timeout': timeout,\n                'q': q,\n                'repository': repository,\n                'format': format,\n                'group': group,\n                'name': name,\n                'version': version,\n                'prerelease': prerelease,\n                'md5': md5,\n                'sha1': sha1,\n                'sha256': sha256,\n                'sha512': sha512,\n                'conan.baseVersion': conanBaseVersion,\n                'conan.channel': conanChannel,\n                'conan.revision': conanRevision,\n                'conan.packageId': conanPackageId,\n                'conan.packageRevision': conanPackageRevision,\n                'docker.imageName': dockerImageName,\n                'docker.imageTag': dockerImageTag,\n                'docker.layerId': dockerLayerId,\n                'docker.contentDigest': dockerContentDigest,\n                'maven.groupId': mavenGroupId,\n                'maven.artifactId': mavenArtifactId,\n                'maven.baseVersion': mavenBaseVersion,\n                'maven.extension': mavenExtension,\n                'maven.classifier': mavenClassifier,\n                'gavec': gavec,\n                'npm.scope': npmScope,\n                'npm.author': npmAuthor,\n                'npm.description': npmDescription,\n                'npm.keywords': npmKeywords,\n                'npm.license': npmLicense,\n                'npm.tagged_is': npmTaggedIs,\n                'npm.tagged_not': npmTaggedNot,\n                'nuget.id': nugetId,\n                'nuget.tags': nugetTags,\n                'nuget.title': nugetTitle,\n                'nuget.authors': nugetAuthors,\n                'nuget.description': nugetDescription,\n                'nuget.summary': nugetSummary,\n                'p2.pluginName': p2PluginName,\n                'pypi.classifiers': pypiClassifiers,\n                'pypi.description': pypiDescription,\n                'pypi.keywords': pypiKeywords,\n                'pypi.summary': pypiSummary,\n                'rubygems.description': rubygemsDescription,\n                'rubygems.platform': rubygemsPlatform,\n                'rubygems.summary': rubygemsSummary,\n                'yum.architecture': yumArchitecture,\n                'yum.name': yumName,\n            },\n        });\n    }\n\n    /**\n     * Search and download asset\n     * Returns a 302 Found with location header field set to download URL. Unless a sort parameter is supplied, the search must return a single asset to receive download URL.\n     * @returns void\n     * @throws ApiError\n     */\n    public static searchAndDownloadAssets({\n        sort,\n        direction,\n        timeout,\n        q,\n        repository,\n        format,\n        group,\n        name,\n        version,\n        prerelease,\n        md5,\n        sha1,\n        sha256,\n        sha512,\n        conanBaseVersion,\n        conanChannel,\n        conanRevision,\n        conanPackageId,\n        conanPackageRevision,\n        dockerImageName,\n        dockerImageTag,\n        dockerLayerId,\n        dockerContentDigest,\n        mavenGroupId,\n        mavenArtifactId,\n        mavenBaseVersion,\n        mavenExtension,\n        mavenClassifier,\n        gavec,\n        npmScope,\n        npmAuthor,\n        npmDescription,\n        npmKeywords,\n        npmLicense,\n        npmTaggedIs,\n        npmTaggedNot,\n        nugetId,\n        nugetTags,\n        nugetTitle,\n        nugetAuthors,\n        nugetDescription,\n        nugetSummary,\n        p2PluginName,\n        pypiClassifiers,\n        pypiDescription,\n        pypiKeywords,\n        pypiSummary,\n        rubygemsDescription,\n        rubygemsPlatform,\n        rubygemsSummary,\n        yumArchitecture,\n        yumName,\n    }: {\n        /**\n         * The field to sort the results against, if left empty and more than 1 result is returned, the request will fail.\n         */\n        sort?: 'group' | 'name' | 'version' | 'repository',\n        /**\n         * The direction to sort records in, defaults to ascending ('asc') for all sort fields, except version, which defaults to descending ('desc')\n         */\n        direction?: 'asc' | 'desc',\n        /**\n         * How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used.\n         */\n        timeout?: number,\n        /**\n         * Query by keyword\n         */\n        q?: string,\n        /**\n         * Repository name\n         */\n        repository?: string,\n        /**\n         * Query by format\n         */\n        format?: string,\n        /**\n         * Component group\n         */\n        group?: string,\n        /**\n         * Component name\n         */\n        name?: string,\n        /**\n         * Component version\n         */\n        version?: string,\n        /**\n         * Prerelease version flag\n         */\n        prerelease?: string,\n        /**\n         * Specific MD5 hash of component's asset\n         */\n        md5?: string,\n        /**\n         * Specific SHA-1 hash of component's asset\n         */\n        sha1?: string,\n        /**\n         * Specific SHA-256 hash of component's asset\n         */\n        sha256?: string,\n        /**\n         * Specific SHA-512 hash of component's asset\n         */\n        sha512?: string,\n        /**\n         * Conan base version\n         */\n        conanBaseVersion?: string,\n        /**\n         * Conan channel\n         */\n        conanChannel?: string,\n        /**\n         * Conan recipe revision\n         */\n        conanRevision?: string,\n        /**\n         * Conan package id\n         */\n        conanPackageId?: string,\n        /**\n         * Conan package revision\n         */\n        conanPackageRevision?: string,\n        /**\n         * Docker image name\n         */\n        dockerImageName?: string,\n        /**\n         * Docker image tag\n         */\n        dockerImageTag?: string,\n        /**\n         * Docker layer ID\n         */\n        dockerLayerId?: string,\n        /**\n         * Docker content digest\n         */\n        dockerContentDigest?: string,\n        /**\n         * Maven groupId\n         */\n        mavenGroupId?: string,\n        /**\n         * Maven artifactId\n         */\n        mavenArtifactId?: string,\n        /**\n         * Maven base version\n         */\n        mavenBaseVersion?: string,\n        /**\n         * Maven extension of component's asset\n         */\n        mavenExtension?: string,\n        /**\n         * Maven classifier of component's asset\n         */\n        mavenClassifier?: string,\n        /**\n         * Group asset version extension classifier\n         */\n        gavec?: string,\n        /**\n         * npm scope\n         */\n        npmScope?: string,\n        /**\n         * npm author\n         */\n        npmAuthor?: string,\n        /**\n         * npm description\n         */\n        npmDescription?: string,\n        /**\n         * npm keywords\n         */\n        npmKeywords?: string,\n        /**\n         * npm license\n         */\n        npmLicense?: string,\n        /**\n         * npm tagged is\n         */\n        npmTaggedIs?: string,\n        /**\n         * npm tagged not\n         */\n        npmTaggedNot?: string,\n        /**\n         * NuGet id\n         */\n        nugetId?: string,\n        /**\n         * NuGet tags\n         */\n        nugetTags?: string,\n        /**\n         * NuGet title\n         */\n        nugetTitle?: string,\n        /**\n         * NuGet authors\n         */\n        nugetAuthors?: string,\n        /**\n         * NuGet description\n         */\n        nugetDescription?: string,\n        /**\n         * NuGet summary\n         */\n        nugetSummary?: string,\n        /**\n         * p2 plugin name\n         */\n        p2PluginName?: string,\n        /**\n         * PyPI classifiers\n         */\n        pypiClassifiers?: string,\n        /**\n         * PyPI description\n         */\n        pypiDescription?: string,\n        /**\n         * PyPI keywords\n         */\n        pypiKeywords?: string,\n        /**\n         * PyPI summary\n         */\n        pypiSummary?: string,\n        /**\n         * RubyGems description\n         */\n        rubygemsDescription?: string,\n        /**\n         * RubyGems platform\n         */\n        rubygemsPlatform?: string,\n        /**\n         * RubyGems summary\n         */\n        rubygemsSummary?: string,\n        /**\n         * Yum architecture\n         */\n        yumArchitecture?: string,\n        /**\n         * Yum package name\n         */\n        yumName?: string,\n    }): CancelablePromise<void> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/search/assets/download',\n            query: {\n                'sort': sort,\n                'direction': direction,\n                'timeout': timeout,\n                'q': q,\n                'repository': repository,\n                'format': format,\n                'group': group,\n                'name': name,\n                'version': version,\n                'prerelease': prerelease,\n                'md5': md5,\n                'sha1': sha1,\n                'sha256': sha256,\n                'sha512': sha512,\n                'conan.baseVersion': conanBaseVersion,\n                'conan.channel': conanChannel,\n                'conan.revision': conanRevision,\n                'conan.packageId': conanPackageId,\n                'conan.packageRevision': conanPackageRevision,\n                'docker.imageName': dockerImageName,\n                'docker.imageTag': dockerImageTag,\n                'docker.layerId': dockerLayerId,\n                'docker.contentDigest': dockerContentDigest,\n                'maven.groupId': mavenGroupId,\n                'maven.artifactId': mavenArtifactId,\n                'maven.baseVersion': mavenBaseVersion,\n                'maven.extension': mavenExtension,\n                'maven.classifier': mavenClassifier,\n                'gavec': gavec,\n                'npm.scope': npmScope,\n                'npm.author': npmAuthor,\n                'npm.description': npmDescription,\n                'npm.keywords': npmKeywords,\n                'npm.license': npmLicense,\n                'npm.tagged_is': npmTaggedIs,\n                'npm.tagged_not': npmTaggedNot,\n                'nuget.id': nugetId,\n                'nuget.tags': nugetTags,\n                'nuget.title': nugetTitle,\n                'nuget.authors': nugetAuthors,\n                'nuget.description': nugetDescription,\n                'nuget.summary': nugetSummary,\n                'p2.pluginName': p2PluginName,\n                'pypi.classifiers': pypiClassifiers,\n                'pypi.description': pypiDescription,\n                'pypi.keywords': pypiKeywords,\n                'pypi.summary': pypiSummary,\n                'rubygems.description': rubygemsDescription,\n                'rubygems.platform': rubygemsPlatform,\n                'rubygems.summary': rubygemsSummary,\n                'yum.architecture': yumArchitecture,\n                'yum.name': yumName,\n            },\n            errors: {\n                400: `ValidationErrorXO{id='*', message='Search returned multiple assets, please refine search criteria to find a single asset or use the sort query parameter to retrieve the first result.'}`,\n                404: `Asset search returned no results`,\n            },\n        });\n    }\n\n    /**\n     * Search components\n     * @returns PageComponentXO successful operation\n     * @throws ApiError\n     */\n    public static search({\n        continuationToken,\n        sort,\n        direction,\n        timeout,\n        q,\n        repository,\n        format,\n        group,\n        name,\n        version,\n        prerelease,\n        md5,\n        sha1,\n        sha256,\n        sha512,\n        conanBaseVersion,\n        conanChannel,\n        conanRevision,\n        conanPackageId,\n        conanPackageRevision,\n        dockerImageName,\n        dockerImageTag,\n        dockerLayerId,\n        dockerContentDigest,\n        mavenGroupId,\n        mavenArtifactId,\n        mavenBaseVersion,\n        mavenExtension,\n        mavenClassifier,\n        gavec,\n        npmScope,\n        npmAuthor,\n        npmDescription,\n        npmKeywords,\n        npmLicense,\n        npmTaggedIs,\n        npmTaggedNot,\n        nugetId,\n        nugetTags,\n        nugetTitle,\n        nugetAuthors,\n        nugetDescription,\n        nugetSummary,\n        p2PluginName,\n        pypiClassifiers,\n        pypiDescription,\n        pypiKeywords,\n        pypiSummary,\n        rubygemsDescription,\n        rubygemsPlatform,\n        rubygemsSummary,\n        yumArchitecture,\n        yumName,\n    }: {\n        /**\n         * A token returned by a prior request. If present, the next page of results are returned\n         */\n        continuationToken?: string,\n        /**\n         * The field to sort the results against, if left empty, a sort based on match weight will be used.\n         */\n        sort?: 'group' | 'name' | 'version' | 'repository',\n        /**\n         * The direction to sort records in, defaults to ascending ('asc') for all sort fields, except version, which defaults to descending ('desc')\n         */\n        direction?: 'asc' | 'desc',\n        /**\n         * How long to wait for search results in seconds. If this value is not provided, the system default timeout will be used.\n         */\n        timeout?: number,\n        /**\n         * Query by keyword\n         */\n        q?: string,\n        /**\n         * Repository name\n         */\n        repository?: string,\n        /**\n         * Query by format\n         */\n        format?: string,\n        /**\n         * Component group\n         */\n        group?: string,\n        /**\n         * Component name\n         */\n        name?: string,\n        /**\n         * Component version\n         */\n        version?: string,\n        /**\n         * Prerelease version flag\n         */\n        prerelease?: string,\n        /**\n         * Specific MD5 hash of component's asset\n         */\n        md5?: string,\n        /**\n         * Specific SHA-1 hash of component's asset\n         */\n        sha1?: string,\n        /**\n         * Specific SHA-256 hash of component's asset\n         */\n        sha256?: string,\n        /**\n         * Specific SHA-512 hash of component's asset\n         */\n        sha512?: string,\n        /**\n         * Conan base version\n         */\n        conanBaseVersion?: string,\n        /**\n         * Conan channel\n         */\n        conanChannel?: string,\n        /**\n         * Conan recipe revision\n         */\n        conanRevision?: string,\n        /**\n         * Conan package id\n         */\n        conanPackageId?: string,\n        /**\n         * Conan package revision\n         */\n        conanPackageRevision?: string,\n        /**\n         * Docker image name\n         */\n        dockerImageName?: string,\n        /**\n         * Docker image tag\n         */\n        dockerImageTag?: string,\n        /**\n         * Docker layer ID\n         */\n        dockerLayerId?: string,\n        /**\n         * Docker content digest\n         */\n        dockerContentDigest?: string,\n        /**\n         * Maven groupId\n         */\n        mavenGroupId?: string,\n        /**\n         * Maven artifactId\n         */\n        mavenArtifactId?: string,\n        /**\n         * Maven base version\n         */\n        mavenBaseVersion?: string,\n        /**\n         * Maven extension of component's asset\n         */\n        mavenExtension?: string,\n        /**\n         * Maven classifier of component's asset\n         */\n        mavenClassifier?: string,\n        /**\n         * Group asset version extension classifier\n         */\n        gavec?: string,\n        /**\n         * npm scope\n         */\n        npmScope?: string,\n        /**\n         * npm author\n         */\n        npmAuthor?: string,\n        /**\n         * npm description\n         */\n        npmDescription?: string,\n        /**\n         * npm keywords\n         */\n        npmKeywords?: string,\n        /**\n         * npm license\n         */\n        npmLicense?: string,\n        /**\n         * npm tagged is\n         */\n        npmTaggedIs?: string,\n        /**\n         * npm tagged not\n         */\n        npmTaggedNot?: string,\n        /**\n         * NuGet id\n         */\n        nugetId?: string,\n        /**\n         * NuGet tags\n         */\n        nugetTags?: string,\n        /**\n         * NuGet title\n         */\n        nugetTitle?: string,\n        /**\n         * NuGet authors\n         */\n        nugetAuthors?: string,\n        /**\n         * NuGet description\n         */\n        nugetDescription?: string,\n        /**\n         * NuGet summary\n         */\n        nugetSummary?: string,\n        /**\n         * p2 plugin name\n         */\n        p2PluginName?: string,\n        /**\n         * PyPI classifiers\n         */\n        pypiClassifiers?: string,\n        /**\n         * PyPI description\n         */\n        pypiDescription?: string,\n        /**\n         * PyPI keywords\n         */\n        pypiKeywords?: string,\n        /**\n         * PyPI summary\n         */\n        pypiSummary?: string,\n        /**\n         * RubyGems description\n         */\n        rubygemsDescription?: string,\n        /**\n         * RubyGems platform\n         */\n        rubygemsPlatform?: string,\n        /**\n         * RubyGems summary\n         */\n        rubygemsSummary?: string,\n        /**\n         * Yum architecture\n         */\n        yumArchitecture?: string,\n        /**\n         * Yum package name\n         */\n        yumName?: string,\n    }): CancelablePromise<PageComponentXO> {\n        return __request(OpenAPI, {\n            method: 'GET',\n            url: '/v1/search',\n            query: {\n                'continuationToken': continuationToken,\n                'sort': sort,\n                'direction': direction,\n                'timeout': timeout,\n                'q': q,\n                'repository': repository,\n                'format': format,\n                'group': group,\n                'name': name,\n                'version': version,\n                'prerelease': prerelease,\n                'md5': md5,\n                'sha1': sha1,\n                'sha256': sha256,\n                'sha512': sha512,\n                'conan.baseVersion': conanBaseVersion,\n                'conan.channel': conanChannel,\n                'conan.revision': conanRevision,\n                'conan.packageId': conanPackageId,\n                'conan.packageRevision': conanPackageRevision,\n                'docker.imageName': dockerImageName,\n                'docker.imageTag': dockerImageTag,\n                'docker.layerId': dockerLayerId,\n                'docker.contentDigest': dockerContentDigest,\n                'maven.groupId': mavenGroupId,\n                'maven.artifactId': mavenArtifactId,\n                'maven.baseVersion': mavenBaseVersion,\n                'maven.extension': mavenExtension,\n                'maven.classifier': mavenClassifier,\n                'gavec': gavec,\n                'npm.scope': npmScope,\n                'npm.author': npmAuthor,\n                'npm.description': npmDescription,\n                'npm.keywords': npmKeywords,\n                'npm.license': npmLicense,\n                'npm.tagged_is': npmTaggedIs,\n                'npm.tagged_not': npmTaggedNot,\n                'nuget.id': nugetId,\n                'nuget.tags': nugetTags,\n                'nuget.title': nugetTitle,\n                'nuget.authors': nugetAuthors,\n                'nuget.description': nugetDescription,\n                'nuget.summary': nugetSummary,\n                'p2.pluginName': p2PluginName,\n                'pypi.classifiers': pypiClassifiers,\n                'pypi.description': pypiDescription,\n                'pypi.keywords': pypiKeywords,\n                'pypi.summary': pypiSummary,\n                'rubygems.description': rubygemsDescription,\n                'rubygems.platform': rubygemsPlatform,\n                'rubygems.summary': rubygemsSummary,\n                'yum.architecture': yumArchitecture,\n                'yum.name': yumName,\n            },\n        });\n    }\n\n}\n","import type { AssetXO } from '../../types';\n\n// Extensions we don't want to fetch extra data for, and don't want to display\n// as their own entity.\nconst MAVEN_IGNORED_ASSET_EXTENSIONS = new Set<string>([\n  'pom',\n  'sha1',\n  'md5',\n  'sha256',\n]);\n\n// Whether an asset has data we might want to fetch, and/or display as its own\n// entity.\nexport function isPrimaryAsset(asset: AssetXO): boolean {\n  if (!asset.maven2) {\n    return true;\n  }\n  const { extension } = asset.maven2;\n  if (extension === undefined) {\n    return true;\n  }\n  // Extension can be `jar.md5` or `zip.sha1`, for example\n  return !MAVEN_IGNORED_ASSET_EXTENSIONS.has(extension.split('.').pop() ?? '');\n}\n","import {\n  ConfigApi,\n  createApiRef,\n  DiscoveryApi,\n  IdentityApi,\n} from '@backstage/core-plugin-api';\n\nimport {\n  NEXUS_REPOSITORY_MANAGER_ANNOTATIONS,\n  NEXUS_REPOSITORY_MANAGER_EXPERIMENTAL_ANNOTATIONS,\n} from '../../annotations';\nimport { OpenAPI, SearchService } from '../../generated';\nimport type {\n  Annotation,\n  AssetXO,\n  ComponentXO,\n  DockerManifest,\n  SearchServiceQuery,\n} from '../../types';\nimport { isPrimaryAsset } from '../../utils';\n\nconst DEFAULT_PROXY_PATH = '/nexus-repository-manager' as const;\nconst NEXUS_REPOSITORY_MANAGER_CONFIG = {\n  proxyPath: 'nexusRepositoryManager.proxyPath',\n  experimentalAnnotations: 'nexusRepositoryManager.experimentalAnnotations',\n} as const;\n\n/**\n * Indicates that we want manifest v2 schema 2 if possible. It's faster\n * for supporting servers to return and contains size information.\n * @see {@link https://docs.docker.com/registry/spec/manifest-v2-2/#backward-compatibility|Backward compatibility}\n */\nconst DOCKER_MANIFEST_HEADERS = {\n  Accept: [\n    'application/vnd.docker.distribution.manifest.v2+json',\n    'application/vnd.docker.distribution.manifest.v1+json;q=0.9',\n    '*/*;q=0.8',\n  ].join(', '),\n} as const satisfies HeadersInit;\n\nfunction getAdditionalHeaders(format?: string): HeadersInit {\n  switch (format /* NOSONAR - use switch for expandability */) {\n    case 'docker':\n      return DOCKER_MANIFEST_HEADERS;\n    default:\n      return {};\n  }\n}\n\n// Whether an asset has data we might want to fetch\nfunction shouldFetchSize(asset: AssetXO) {\n  if (asset.format !== 'maven2') {\n    return false;\n  }\n\n  if (!asset.maven2) {\n    return false;\n  }\n  return (\n    // Choosing not to care about the size of e.g. sources or javadoc\n    asset.maven2.classifier || !isPrimaryAsset(asset)\n  );\n}\n\nexport type NexusRepositoryManagerApiV1 = {\n  getComponents(query: SearchServiceQuery): Promise<{\n    components: {\n      component: ComponentXO;\n      dockerManifests: (DockerManifest | null)[];\n    }[];\n  }>;\n  getAnnotations(): { ANNOTATIONS: Readonly<Annotation[]> };\n};\n\nexport const NexusRepositoryManagerApiRef =\n  createApiRef<NexusRepositoryManagerApiV1>({\n    id: 'plugin.nexus-repository-manager.service',\n  });\n\nexport type NexusRepositoryManagerApiClientOptions = {\n  discoveryApi: DiscoveryApi;\n  configApi: ConfigApi;\n  identityApi: IdentityApi;\n};\n\nexport class NexusRepositoryManagerApiClient\n  implements NexusRepositoryManagerApiV1\n{\n  private readonly discoveryApi: DiscoveryApi;\n  private readonly configApi: ConfigApi;\n  private readonly identityApi: IdentityApi;\n  private baseUrl = '';\n\n  constructor(options: NexusRepositoryManagerApiClientOptions) {\n    this.discoveryApi = options.discoveryApi;\n    this.configApi = options.configApi;\n    this.identityApi = options.identityApi;\n  }\n\n  private async getBaseUrl() {\n    if (this.baseUrl) {\n      return this.baseUrl;\n    }\n\n    const proxyPath =\n      this.configApi.getOptionalString(\n        NEXUS_REPOSITORY_MANAGER_CONFIG.proxyPath,\n      ) ?? DEFAULT_PROXY_PATH;\n    this.baseUrl = `${await this.discoveryApi.getBaseUrl('proxy')}${proxyPath}`;\n    return this.baseUrl;\n  }\n\n  private async proxiedDownloadUrl(asset: AssetXO) {\n    const proxyUrl = await this.getBaseUrl();\n    return `${proxyUrl}/repository/${asset.repository}/${asset.path}`;\n  }\n\n  private async searchServiceFetcher(url: string, query: SearchServiceQuery) {\n    const { token: idToken } = await this.identityApi.getCredentials();\n\n    OpenAPI.BASE = url;\n    OpenAPI.TOKEN = idToken;\n\n    return await SearchService.search(query);\n  }\n\n  private async fetcher(\n    url: string,\n    additionalHeaders: HeadersInit = {},\n    method: string = 'GET',\n  ) {\n    const { token: idToken } = await this.identityApi.getCredentials();\n\n    const headers = new Headers(additionalHeaders);\n\n    if (idToken) {\n      headers.set('Authorization', `Bearer ${idToken}`);\n    }\n\n    const response = await fetch(url, { headers, method });\n    if (!response.ok) {\n      throw new Error(\n        `failed to fetch data, status ${response.status}: ${response.statusText}`,\n      );\n    }\n    return response;\n  }\n\n  /**\n   * Use HEAD requests to get the size of each asset we care about, as nexus\n   * doesn't return that information in the search API.\n   * Only supports maven for now.\n   */\n  private async addFileSizes(component: ComponentXO): Promise<ComponentXO> {\n    if (component.format !== 'maven2' || !component.assets) {\n      return component;\n    }\n\n    const headers = getAdditionalHeaders(component.format);\n\n    const updatedAssets = await Promise.all(\n      component.assets.map(async asset => {\n        // Save a request if Nexus decides to return a size (unknown if possible)\n        if (asset.fileSize !== 0 || shouldFetchSize(asset)) {\n          return asset;\n        }\n\n        const response = await this.fetcher(\n          await this.proxiedDownloadUrl(asset),\n          headers,\n          'HEAD',\n        );\n\n        return {\n          ...asset,\n          fileSize: Number(response.headers.get('Content-Length')) || 0,\n        };\n      }),\n    );\n\n    return {\n      ...component,\n      assets: updatedAssets,\n    };\n  }\n\n  private async getDockerManifests(component: ComponentXO) {\n    // We only need to fetch the actual assets (manifests) for docker\n    if (component.format !== 'docker') {\n      return [];\n    }\n\n    const additionalHeaders = getAdditionalHeaders(component.format);\n\n    const assets = await Promise.all(\n      component.assets?.map(\n        async asset =>\n          (\n            await this.fetcher(\n              await this.proxiedDownloadUrl(asset),\n              additionalHeaders,\n            )\n          ).json() as Promise<DockerManifest>,\n        // Create a dummy promise to avoid Promise.all() from failing\n      ) ?? [new Promise<null>(() => null)],\n    );\n\n    return assets;\n  }\n\n  async getComponents(query: SearchServiceQuery) {\n    const proxyUrl = await this.getBaseUrl();\n\n    const components: ComponentXO[] = [];\n    let continuationToken: undefined | string;\n\n    do {\n      const res = await this.searchServiceFetcher(`${proxyUrl}/service/rest`, {\n        ...query,\n        continuationToken,\n      });\n\n      continuationToken = res.continuationToken;\n      components.push(...(res.items ?? []));\n    } while (continuationToken);\n\n    // TODO make resilient to individual errors\n    // We're seeing intermittent 504s that stop the whole request\n    const values = await Promise.all(\n      components.map(async component => ({\n        component: await this.addFileSizes(component),\n        dockerManifests: await this.getDockerManifests(component),\n      })),\n    );\n\n    const filteredValues = values.filter(\n      v => v.component?.assets?.some(asset => isPrimaryAsset(asset)),\n    );\n\n    return {\n      components: filteredValues,\n    };\n  }\n\n  getAnnotations() {\n    const usesExperimental = this.configApi.getOptionalBoolean(\n      NEXUS_REPOSITORY_MANAGER_CONFIG.experimentalAnnotations,\n    );\n\n    if (usesExperimental) {\n      return {\n        ANNOTATIONS: [\n          ...NEXUS_REPOSITORY_MANAGER_ANNOTATIONS,\n          ...NEXUS_REPOSITORY_MANAGER_EXPERIMENTAL_ANNOTATIONS,\n        ],\n      };\n    }\n\n    return { ANNOTATIONS: NEXUS_REPOSITORY_MANAGER_ANNOTATIONS };\n  }\n}\n","import { createRouteRef } from '@backstage/core-plugin-api';\n\nexport const rootRouteRef = createRouteRef({\n  id: 'nexus-repository-manager',\n});\n","import { type Entity } from '@backstage/catalog-model';\nimport {\n  configApiRef,\n  createApiFactory,\n  createComponentExtension,\n  createPlugin,\n  discoveryApiRef,\n  identityApiRef,\n} from '@backstage/core-plugin-api';\n\nimport {\n  NEXUS_REPOSITORY_MANAGER_ANNOTATIONS,\n  NEXUS_REPOSITORY_MANAGER_EXPERIMENTAL_ANNOTATIONS,\n} from './annotations';\nimport {\n  NexusRepositoryManagerApiClient,\n  NexusRepositoryManagerApiRef,\n} from './api';\nimport { rootRouteRef } from './routes';\n\nexport const nexusRepositoryManagerPlugin = createPlugin({\n  id: 'nexus-repository-manager',\n  routes: {\n    root: rootRouteRef,\n  },\n  apis: [\n    createApiFactory({\n      api: NexusRepositoryManagerApiRef,\n      deps: {\n        discoveryApi: discoveryApiRef,\n        configApi: configApiRef,\n        identityApi: identityApiRef,\n      },\n      factory: ({ discoveryApi, configApi, identityApi }) =>\n        new NexusRepositoryManagerApiClient({\n          discoveryApi,\n          configApi,\n          identityApi,\n        }),\n    }),\n  ],\n});\n\nexport const NexusRepositoryManagerPage = nexusRepositoryManagerPlugin.provide(\n  createComponentExtension({\n    name: 'NexusRepositoryManagerPage',\n    component: {\n      lazy: () => import('./components').then(m => m.NexusRepositoryManager),\n    },\n  }),\n);\n\nexport const isNexusRepositoryManagerAvailable = (entity: Entity) =>\n  NEXUS_REPOSITORY_MANAGER_ANNOTATIONS.some(value =>\n    Boolean(entity.metadata.annotations?.[value.annotation]),\n  );\n\nexport const isNexusRepositoryManagerExperimentalAvailable = (entity: Entity) =>\n  isNexusRepositoryManagerAvailable(entity) ||\n  NEXUS_REPOSITORY_MANAGER_EXPERIMENTAL_ANNOTATIONS.some(value =>\n    Boolean(entity.metadata.annotations?.[value.annotation]),\n  );\n"],"names":["__publicField","headers","request","resolve","__request","_a"],"mappings":";;AAEO,MAAM,2CAA8C,GAAA;AAAA,EACzD;AAAA,IACE,UAAY,EAAA,uCAAA;AAAA,GACd;AACF,EAAA;AAEO,MAAM,oCAAuC,GAAA;AAAA,EAClD;AAAA,IACE,UAAY,EAAA,4CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,eAAiB,EAAA,GAAA;AAAA,KACnB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,2CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,cAAgB,EAAA,GAAA;AAAA,KAClB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,0CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,aAAe,EAAA,GAAA;AAAA,KACjB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,gDAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,mBAAqB,EAAA,GAAA;AAAA,KACvB,CAAA;AAAA,GACF;AACF,CAAA,CAAA;AAEO,MAAM,iDAAoD,GAAA;AAAA,EAC/D;AAAA,IACE,UAAY,EAAA,kCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,CAAG,EAAA,GAAA;AAAA,KACL,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,qCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,UAAY,EAAA,GAAA;AAAA,KACd,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,iCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,MAAQ,EAAA,GAAA;AAAA,KACV,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,gCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,KAAO,EAAA,GAAA;AAAA,KACT,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,+BAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,IAAM,EAAA,GAAA;AAAA,KACR,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,kCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,OAAS,EAAA,GAAA;AAAA,KACX,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,qCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,UAAY,EAAA,GAAA;AAAA,KACd,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,8BAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,GAAK,EAAA,GAAA;AAAA,KACP,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,+BAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,IAAM,EAAA,GAAA;AAAA,KACR,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,iCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,MAAQ,EAAA,GAAA;AAAA,KACV,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,iCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,MAAQ,EAAA,GAAA;AAAA,KACV,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,6CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,gBAAkB,EAAA,GAAA;AAAA,KACpB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,wCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,YAAc,EAAA,GAAA;AAAA,KAChB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,yCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,aAAe,EAAA,GAAA;AAAA,KACjB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,2CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,cAAgB,EAAA,GAAA;AAAA,KAClB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,iDAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,oBAAsB,EAAA,GAAA;AAAA,KACxB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,yCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,YAAc,EAAA,GAAA;AAAA,KAChB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,4CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,eAAiB,EAAA,GAAA;AAAA,KACnB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,6CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,gBAAkB,EAAA,GAAA;AAAA,KACpB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,0CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,cAAgB,EAAA,GAAA;AAAA,KAClB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,2CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,eAAiB,EAAA,GAAA;AAAA,KACnB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,gCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,KAAO,EAAA,GAAA;AAAA,KACT,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,oCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,QAAU,EAAA,GAAA;AAAA,KACZ,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,qCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,SAAW,EAAA,GAAA;AAAA,KACb,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,0CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,cAAgB,EAAA,GAAA;AAAA,KAClB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,uCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,WAAa,EAAA,GAAA;AAAA,KACf,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,sCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,UAAY,EAAA,GAAA;AAAA,KACd,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,wCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,WAAa,EAAA,GAAA;AAAA,KACf,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,yCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,YAAc,EAAA,GAAA;AAAA,KAChB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,mCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,OAAS,EAAA,GAAA;AAAA,KACX,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,qCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,SAAW,EAAA,GAAA;AAAA,KACb,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,sCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,UAAY,EAAA,GAAA;AAAA,KACd,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,wCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,YAAc,EAAA,GAAA;AAAA,KAChB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,4CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,gBAAkB,EAAA,GAAA;AAAA,KACpB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,wCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,YAAc,EAAA,GAAA;AAAA,KAChB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,yCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,YAAc,EAAA,GAAA;AAAA,KAChB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,2CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,eAAiB,EAAA,GAAA;AAAA,KACnB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,2CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,eAAiB,EAAA,GAAA;AAAA,KACnB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,wCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,YAAc,EAAA,GAAA;AAAA,KAChB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,uCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,WAAa,EAAA,GAAA;AAAA,KACf,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,+CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,mBAAqB,EAAA,GAAA;AAAA,KACvB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,4CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,gBAAkB,EAAA,GAAA;AAAA,KACpB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,2CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,eAAiB,EAAA,GAAA;AAAA,KACnB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,2CAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,eAAiB,EAAA,GAAA;AAAA,KACnB,CAAA;AAAA,GACF;AAAA,EACA;AAAA,IACE,UAAY,EAAA,mCAAA;AAAA,IACZ,OAAO,CAAQ,GAAA,MAAA;AAAA,MACb,OAAS,EAAA,GAAA;AAAA,KACX,CAAA;AAAA,GACF;AACF,CAAA;;;;;;;;AC3SO,MAAM,iBAAiB,KAAM,CAAA;AAAA,EAOhC,WAAA,CAAY,OAA4B,EAAA,QAAA,EAAqB,OAAiB,EAAA;AAC1E,IAAA,KAAA,CAAM,OAAO,CAAA,CAAA;AAPjB,IAAgBA,eAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;AAChB,IAAgBA,eAAA,CAAA,IAAA,EAAA,QAAA,CAAA,CAAA;AAChB,IAAgBA,eAAA,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA;AAChB,IAAgBA,eAAA,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;AAChB,IAAgBA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA,CAAA;AAKZ,IAAA,IAAA,CAAK,IAAO,GAAA,UAAA,CAAA;AACZ,IAAA,IAAA,CAAK,MAAM,QAAS,CAAA,GAAA,CAAA;AACpB,IAAA,IAAA,CAAK,SAAS,QAAS,CAAA,MAAA,CAAA;AACvB,IAAA,IAAA,CAAK,aAAa,QAAS,CAAA,UAAA,CAAA;AAC3B,IAAA,IAAA,CAAK,OAAO,QAAS,CAAA,IAAA,CAAA;AACrB,IAAA,IAAA,CAAK,OAAU,GAAA,OAAA,CAAA;AAAA,GACnB;AACJ;;;;;;;;;;;;;;;;;;;;ACxBA,IAAA,WAAA,EAAA,WAAA,EAAA,YAAA,EAAA,eAAA,EAAA,QAAA,EAAA,QAAA,EAAA,OAAA,CAAA;AAIO,MAAM,oBAAoB,KAAM,CAAA;AAAA,EAEnC,YAAY,OAAiB,EAAA;AACzB,IAAA,KAAA,CAAM,OAAO,CAAA,CAAA;AACb,IAAA,IAAA,CAAK,IAAO,GAAA,aAAA,CAAA;AAAA,GAChB;AAAA,EAEA,IAAW,WAAuB,GAAA;AAC9B,IAAO,OAAA,IAAA,CAAA;AAAA,GACX;AACJ,CAAA;AAUO,MAAM,iBAA2C,CAAA;AAAA,EASpD,YACI,QAKF,EAAA;AAdF,IAAA,YAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,IAAA,YAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,IAAA,YAAA,CAAA,IAAA,EAAA,YAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,IAAA,YAAA,CAAA,IAAA,EAAS,eAAT,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,IAAA,YAAA,CAAA,IAAA,EAAS,QAAT,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,IAAA,YAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AACA,IAAA,YAAA,CAAA,IAAA,EAAA,OAAA,EAAA,KAAA,CAAA,CAAA,CAAA;AASI,IAAA,YAAA,CAAA,IAAA,EAAK,WAAc,EAAA,KAAA,CAAA,CAAA;AACnB,IAAA,YAAA,CAAA,IAAA,EAAK,WAAc,EAAA,KAAA,CAAA,CAAA;AACnB,IAAA,YAAA,CAAA,IAAA,EAAK,YAAe,EAAA,KAAA,CAAA,CAAA;AACpB,IAAA,YAAA,CAAA,IAAA,EAAK,iBAAkB,EAAC,CAAA,CAAA;AACxB,IAAA,YAAA,CAAA,IAAA,EAAK,QAAW,EAAA,IAAI,OAAW,CAAA,CAAC,SAAS,MAAW,KAAA;AAChD,MAAA,YAAA,CAAA,IAAA,EAAK,QAAW,EAAA,OAAA,CAAA,CAAA;AAChB,MAAA,YAAA,CAAA,IAAA,EAAK,OAAU,EAAA,MAAA,CAAA,CAAA;AAEf,MAAM,MAAA,SAAA,GAAY,CAAC,KAAoC,KAAA;AAhDnE,QAAA,IAAA,EAAA,CAAA;AAiDgB,QAAA,IAAI,YAAK,CAAA,IAAA,EAAA,WAAA,CAAA,IAAe,YAAK,CAAA,IAAA,EAAA,WAAA,CAAA,IAAe,mBAAK,YAAc,CAAA,EAAA;AAC3D,UAAA,OAAA;AAAA,SACJ;AACA,QAAA,YAAA,CAAA,IAAA,EAAK,WAAc,EAAA,IAAA,CAAA,CAAA;AACnB,QAAA,CAAA,EAAA,GAAA,YAAA,CAAA,IAAA,EAAK,cAAL,IAAgB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,CAAA,CAAA;AAAA,OACpB,CAAA;AAEA,MAAM,MAAA,QAAA,GAAW,CAAC,MAAuB,KAAA;AAxDrD,QAAA,IAAA,EAAA,CAAA;AAyDgB,QAAA,IAAI,YAAK,CAAA,IAAA,EAAA,WAAA,CAAA,IAAe,YAAK,CAAA,IAAA,EAAA,WAAA,CAAA,IAAe,mBAAK,YAAc,CAAA,EAAA;AAC3D,UAAA,OAAA;AAAA,SACJ;AACA,QAAA,YAAA,CAAA,IAAA,EAAK,WAAc,EAAA,IAAA,CAAA,CAAA;AACnB,QAAA,CAAA,EAAA,GAAA,YAAA,CAAA,IAAA,EAAK,aAAL,IAAe,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,IAAA,EAAA,MAAA,CAAA,CAAA;AAAA,OACnB,CAAA;AAEA,MAAM,MAAA,QAAA,GAAW,CAAC,aAAoC,KAAA;AAClD,QAAA,IAAI,YAAK,CAAA,IAAA,EAAA,WAAA,CAAA,IAAe,YAAK,CAAA,IAAA,EAAA,WAAA,CAAA,IAAe,mBAAK,YAAc,CAAA,EAAA;AAC3D,UAAA,OAAA;AAAA,SACJ;AACA,QAAK,YAAA,CAAA,IAAA,EAAA,eAAA,CAAA,CAAgB,KAAK,aAAa,CAAA,CAAA;AAAA,OAC3C,CAAA;AAEA,MAAO,MAAA,CAAA,cAAA,CAAe,UAAU,YAAc,EAAA;AAAA,QAC1C,GAAA,EAAK,MAAe,YAAK,CAAA,IAAA,EAAA,WAAA,CAAA;AAAA,OAC5B,CAAA,CAAA;AAED,MAAO,MAAA,CAAA,cAAA,CAAe,UAAU,YAAc,EAAA;AAAA,QAC1C,GAAA,EAAK,MAAe,YAAK,CAAA,IAAA,EAAA,WAAA,CAAA;AAAA,OAC5B,CAAA,CAAA;AAED,MAAO,MAAA,CAAA,cAAA,CAAe,UAAU,aAAe,EAAA;AAAA,QAC3C,GAAA,EAAK,MAAe,YAAK,CAAA,IAAA,EAAA,YAAA,CAAA;AAAA,OAC5B,CAAA,CAAA;AAED,MAAO,OAAA,QAAA,CAAS,SAAW,EAAA,QAAA,EAAU,QAAoB,CAAA,CAAA;AAAA,KAC5D,CAAA,CAAA,CAAA;AAAA,GACL;AAAA,EAEC,KAAK,MAAO,CAAA,WAAW,CAAI,GAAA;AACpB,IAAO,OAAA,qBAAA,CAAA;AAAA,GACd;AAAA,EAEM,IAAA,CACH,aACA,UAC4B,EAAA;AAC5B,IAAA,OAAO,YAAK,CAAA,IAAA,EAAA,QAAA,CAAA,CAAS,IAAK,CAAA,WAAA,EAAa,UAAU,CAAA,CAAA;AAAA,GACrD;AAAA,EAEO,MACH,UACoB,EAAA;AACpB,IAAO,OAAA,YAAA,CAAA,IAAA,EAAK,QAAS,CAAA,CAAA,KAAA,CAAM,UAAU,CAAA,CAAA;AAAA,GACzC;AAAA,EAEO,QAAQ,SAA6C,EAAA;AACxD,IAAO,OAAA,YAAA,CAAA,IAAA,EAAK,QAAS,CAAA,CAAA,OAAA,CAAQ,SAAS,CAAA,CAAA;AAAA,GAC1C;AAAA,EAEO,MAAe,GAAA;AA5G1B,IAAA,IAAA,EAAA,CAAA;AA6GQ,IAAA,IAAI,YAAK,CAAA,IAAA,EAAA,WAAA,CAAA,IAAe,YAAK,CAAA,IAAA,EAAA,WAAA,CAAA,IAAe,mBAAK,YAAc,CAAA,EAAA;AAC3D,MAAA,OAAA;AAAA,KACJ;AACA,IAAA,YAAA,CAAA,IAAA,EAAK,YAAe,EAAA,IAAA,CAAA,CAAA;AACpB,IAAI,IAAA,YAAA,CAAA,IAAA,EAAK,iBAAgB,MAAQ,EAAA;AAC7B,MAAI,IAAA;AACA,QAAW,KAAA,MAAA,aAAA,IAAiB,mBAAK,eAAiB,CAAA,EAAA;AAC9C,UAAc,aAAA,EAAA,CAAA;AAAA,SAClB;AAAA,eACK,KAAO,EAAA;AACZ,QAAQ,OAAA,CAAA,IAAA,CAAK,+BAA+B,KAAK,CAAA,CAAA;AACjD,QAAA,OAAA;AAAA,OACJ;AAAA,KACJ;AACA,IAAA,YAAA,CAAA,IAAA,EAAK,iBAAgB,MAAS,GAAA,CAAA,CAAA;AAC9B,IAAA,CAAA,EAAA,GAAA,YAAA,CAAA,IAAA,EAAK,OAAL,CAAA,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAA,IAAA,EAAe,IAAI,WAAA,CAAY,iBAAiB,CAAA,CAAA,CAAA;AAAA,GACpD;AAAA,EAEA,IAAW,WAAuB,GAAA;AAC9B,IAAA,OAAO,YAAK,CAAA,IAAA,EAAA,YAAA,CAAA,CAAA;AAAA,GAChB;AACJ,CAAA;AAzGI,WAAA,GAAA,IAAA,OAAA,EAAA,CAAA;AACA,WAAA,GAAA,IAAA,OAAA,EAAA,CAAA;AACA,YAAA,GAAA,IAAA,OAAA,EAAA,CAAA;AACS,eAAA,GAAA,IAAA,OAAA,EAAA,CAAA;AACA,QAAA,GAAA,IAAA,OAAA,EAAA,CAAA;AACT,QAAA,GAAA,IAAA,OAAA,EAAA,CAAA;AACA,OAAA,GAAA,IAAA,OAAA,EAAA;;ACVG,MAAM,OAAyB,GAAA;AAAA,EAClC,IAAM,EAAA,eAAA;AAAA,EACN,OAAS,EAAA,WAAA;AAAA,EACT,gBAAkB,EAAA,KAAA;AAAA,EAClB,WAAa,EAAA,SAAA;AAAA,EACb,KAAO,EAAA,KAAA,CAAA;AAAA,EACP,QAAU,EAAA,KAAA,CAAA;AAAA,EACV,QAAU,EAAA,KAAA,CAAA;AAAA,EACV,OAAS,EAAA,KAAA,CAAA;AAAA,EACT,WAAa,EAAA,KAAA,CAAA;AACjB,CAAA;;ACpBa,MAAA,SAAA,GAAY,CAAI,KAAuE,KAAA;AAChG,EAAO,OAAA,KAAA,KAAU,UAAa,KAAU,KAAA,IAAA,CAAA;AAC5C,CAAA,CAAA;AAEa,MAAA,QAAA,GAAW,CAAC,KAAgC,KAAA;AACrD,EAAA,OAAO,OAAO,KAAU,KAAA,QAAA,CAAA;AAC5B,CAAA,CAAA;AAEa,MAAA,iBAAA,GAAoB,CAAC,KAAgC,KAAA;AAC9D,EAAO,OAAA,QAAA,CAAS,KAAK,CAAA,IAAK,KAAU,KAAA,EAAA,CAAA;AACxC,CAAA,CAAA;AAEa,MAAA,MAAA,GAAS,CAAC,KAA8B,KAAA;AACjD,EAAA,OACI,OAAO,KAAA,KAAU,QACjB,IAAA,OAAO,MAAM,IAAS,KAAA,QAAA,IACtB,OAAO,KAAA,CAAM,WAAW,UACxB,IAAA,OAAO,KAAM,CAAA,WAAA,KAAgB,cAC7B,OAAO,KAAA,CAAM,WAAgB,KAAA,UAAA,IAC7B,OAAO,KAAM,CAAA,WAAA,CAAY,IAAS,KAAA,QAAA,IAClC,gBAAgB,IAAK,CAAA,KAAA,CAAM,WAAY,CAAA,IAAI,KAC3C,eAAgB,CAAA,IAAA,CAAK,KAAM,CAAA,MAAA,CAAO,WAAW,CAAC,CAAA,CAAA;AAEtD,CAAA,CAAA;AAEa,MAAA,UAAA,GAAa,CAAC,KAAkC,KAAA;AACzD,EAAA,OAAO,KAAiB,YAAA,QAAA,CAAA;AAC5B,CAAA,CAAA;AAEa,MAAA,MAAA,GAAS,CAAC,GAAwB,KAAA;AAC3C,EAAI,IAAA;AACA,IAAA,OAAO,KAAK,GAAG,CAAA,CAAA;AAAA,WACV,GAAK,EAAA;AAEV,IAAA,OAAO,MAAO,CAAA,IAAA,CAAK,GAAG,CAAA,CAAE,SAAS,QAAQ,CAAA,CAAA;AAAA,GAC7C;AACJ,CAAA,CAAA;AAEa,MAAA,cAAA,GAAiB,CAAC,MAAwC,KAAA;AACnE,EAAA,MAAM,KAAe,EAAC,CAAA;AAEtB,EAAM,MAAA,MAAA,GAAS,CAAC,GAAA,EAAa,KAAe,KAAA;AACxC,IAAG,EAAA,CAAA,IAAA,CAAK,CAAG,EAAA,kBAAA,CAAmB,GAAG,CAAC,CAAI,CAAA,EAAA,kBAAA,CAAmB,MAAO,CAAA,KAAK,CAAC,CAAC,CAAE,CAAA,CAAA,CAAA;AAAA,GAC7E,CAAA;AAEA,EAAM,MAAA,OAAA,GAAU,CAAC,GAAA,EAAa,KAAe,KAAA;AACzC,IAAI,IAAA,SAAA,CAAU,KAAK,CAAG,EAAA;AAClB,MAAI,IAAA,KAAA,CAAM,OAAQ,CAAA,KAAK,CAAG,EAAA;AACtB,QAAA,KAAA,CAAM,QAAQ,CAAK,CAAA,KAAA;AACf,UAAA,OAAA,CAAQ,KAAK,CAAC,CAAA,CAAA;AAAA,SACjB,CAAA,CAAA;AAAA,OACL,MAAA,IAAW,OAAO,KAAA,KAAU,QAAU,EAAA;AAClC,QAAO,MAAA,CAAA,OAAA,CAAQ,KAAK,CAAE,CAAA,OAAA,CAAQ,CAAC,CAAC,CAAA,EAAG,CAAC,CAAM,KAAA;AACtC,UAAA,OAAA,CAAQ,CAAG,EAAA,GAAG,CAAI,CAAA,EAAA,CAAC,KAAK,CAAC,CAAA,CAAA;AAAA,SAC5B,CAAA,CAAA;AAAA,OACE,MAAA;AACH,QAAA,MAAA,CAAO,KAAK,KAAK,CAAA,CAAA;AAAA,OACrB;AAAA,KACJ;AAAA,GACJ,CAAA;AAEA,EAAO,MAAA,CAAA,OAAA,CAAQ,MAAM,CAAE,CAAA,OAAA,CAAQ,CAAC,CAAC,GAAA,EAAK,KAAK,CAAM,KAAA;AAC7C,IAAA,OAAA,CAAQ,KAAK,KAAK,CAAA,CAAA;AAAA,GACrB,CAAA,CAAA;AAED,EAAI,IAAA,EAAA,CAAG,SAAS,CAAG,EAAA;AACf,IAAA,OAAO,CAAI,CAAA,EAAA,EAAA,CAAG,IAAK,CAAA,GAAG,CAAC,CAAA,CAAA,CAAA;AAAA,GAC3B;AAEA,EAAO,OAAA,EAAA,CAAA;AACX,CAAA,CAAA;AAEA,MAAM,MAAA,GAAS,CAAC,MAAA,EAAuB,OAAuC,KAAA;AAC1E,EAAM,MAAA,OAAA,GAAU,OAAO,WAAe,IAAA,SAAA,CAAA;AAEtC,EAAA,MAAM,IAAO,GAAA,OAAA,CAAQ,GAChB,CAAA,OAAA,CAAQ,eAAiB,EAAA,MAAA,CAAO,OAAO,CAAA,CACvC,OAAQ,CAAA,UAAA,EAAY,CAAC,SAAA,EAAmB,KAAkB,KAAA;AAxFnE,IAAA,IAAA,EAAA,CAAA;AAyFY,IAAA,IAAA,CAAI,EAAQ,GAAA,OAAA,CAAA,IAAA,KAAR,IAAc,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,cAAA,CAAe,KAAQ,CAAA,EAAA;AACrC,MAAA,OAAO,QAAQ,MAAO,CAAA,OAAA,CAAQ,IAAK,CAAA,KAAK,CAAC,CAAC,CAAA,CAAA;AAAA,KAC9C;AACA,IAAO,OAAA,SAAA,CAAA;AAAA,GACV,CAAA,CAAA;AAEL,EAAA,MAAM,GAAM,GAAA,CAAA,EAAG,MAAO,CAAA,IAAI,GAAG,IAAI,CAAA,CAAA,CAAA;AACjC,EAAA,IAAI,QAAQ,KAAO,EAAA;AACf,IAAA,OAAO,GAAG,GAAG,CAAA,EAAG,cAAe,CAAA,OAAA,CAAQ,KAAK,CAAC,CAAA,CAAA,CAAA;AAAA,GACjD;AACA,EAAO,OAAA,GAAA,CAAA;AACX,CAAA,CAAA;AAEa,MAAA,WAAA,GAAc,CAAC,OAAqD,KAAA;AAC7E,EAAA,IAAI,QAAQ,QAAU,EAAA;AAClB,IAAM,MAAA,QAAA,GAAW,IAAI,QAAS,EAAA,CAAA;AAE9B,IAAM,MAAA,OAAA,GAAU,CAAC,GAAA,EAAa,KAAe,KAAA;AACzC,MAAA,IAAI,QAAS,CAAA,KAAK,CAAK,IAAA,MAAA,CAAO,KAAK,CAAG,EAAA;AAClC,QAAS,QAAA,CAAA,MAAA,CAAO,KAAK,KAAK,CAAA,CAAA;AAAA,OACvB,MAAA;AACH,QAAA,QAAA,CAAS,MAAO,CAAA,GAAA,EAAK,IAAK,CAAA,SAAA,CAAU,KAAK,CAAC,CAAA,CAAA;AAAA,OAC9C;AAAA,KACJ,CAAA;AAEA,IAAA,MAAA,CAAO,QAAQ,OAAQ,CAAA,QAAQ,EAC1B,MAAO,CAAA,CAAC,CAAC,CAAG,EAAA,KAAK,MAAM,SAAU,CAAA,KAAK,CAAC,CACvC,CAAA,OAAA,CAAQ,CAAC,CAAC,GAAA,EAAK,KAAK,CAAM,KAAA;AACvB,MAAI,IAAA,KAAA,CAAM,OAAQ,CAAA,KAAK,CAAG,EAAA;AACtB,QAAA,KAAA,CAAM,OAAQ,CAAA,CAAA,CAAA,KAAK,OAAQ,CAAA,GAAA,EAAK,CAAC,CAAC,CAAA,CAAA;AAAA,OAC/B,MAAA;AACH,QAAA,OAAA,CAAQ,KAAK,KAAK,CAAA,CAAA;AAAA,OACtB;AAAA,KACH,CAAA,CAAA;AAEL,IAAO,OAAA,QAAA,CAAA;AAAA,GACX;AACA,EAAO,OAAA,KAAA,CAAA,CAAA;AACX,CAAA,CAAA;AAIa,MAAA,OAAA,GAAU,OAAU,OAAA,EAA4B,QAAuD,KAAA;AAChH,EAAI,IAAA,OAAO,aAAa,UAAY,EAAA;AAChC,IAAA,OAAQ,SAAyB,OAAO,CAAA,CAAA;AAAA,GAC5C;AACA,EAAO,OAAA,QAAA,CAAA;AACX,CAAA,CAAA;AAEa,MAAA,UAAA,GAAa,OAAO,MAAA,EAAuB,OAAiD,KAAA;AACrG,EAAA,MAAM,KAAQ,GAAA,MAAM,OAAQ,CAAA,OAAA,EAAS,OAAO,KAAK,CAAA,CAAA;AACjD,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,OAAA,EAAS,OAAO,QAAQ,CAAA,CAAA;AACvD,EAAA,MAAM,QAAW,GAAA,MAAM,OAAQ,CAAA,OAAA,EAAS,OAAO,QAAQ,CAAA,CAAA;AACvD,EAAA,MAAM,iBAAoB,GAAA,MAAM,OAAQ,CAAA,OAAA,EAAS,OAAO,OAAO,CAAA,CAAA;AAE/D,EAAM,MAAA,OAAA,GAAU,OAAO,OAAQ,CAAA;AAAA,IAC3B,MAAQ,EAAA,kBAAA;AAAA,IACR,GAAG,iBAAA;AAAA,IACH,GAAG,OAAQ,CAAA,OAAA;AAAA,GACd,CACI,CAAA,MAAA,CAAO,CAAC,CAAC,CAAA,EAAG,KAAK,CAAM,KAAA,SAAA,CAAU,KAAK,CAAC,EACvC,MAAO,CAAA,CAACC,UAAS,CAAC,GAAA,EAAK,KAAK,CAAO,MAAA;AAAA,IAChC,GAAGA,QAAAA;AAAA,IACH,CAAC,GAAG,GAAG,MAAA,CAAO,KAAK,CAAA;AAAA,GACvB,CAAA,EAAI,EAA4B,CAAA,CAAA;AAEpC,EAAI,IAAA,iBAAA,CAAkB,KAAK,CAAG,EAAA;AAC1B,IAAQ,OAAA,CAAA,eAAe,CAAI,GAAA,CAAA,OAAA,EAAU,KAAK,CAAA,CAAA,CAAA;AAAA,GAC9C;AAEA,EAAA,IAAI,iBAAkB,CAAA,QAAQ,CAAK,IAAA,iBAAA,CAAkB,QAAQ,CAAG,EAAA;AAC5D,IAAA,MAAM,cAAc,MAAO,CAAA,CAAA,EAAG,QAAQ,CAAA,CAAA,EAAI,QAAQ,CAAE,CAAA,CAAA,CAAA;AACpD,IAAQ,OAAA,CAAA,eAAe,CAAI,GAAA,CAAA,MAAA,EAAS,WAAW,CAAA,CAAA,CAAA;AAAA,GACnD;AAEA,EAAA,IAAI,QAAQ,IAAM,EAAA;AACd,IAAA,IAAI,QAAQ,SAAW,EAAA;AACnB,MAAQ,OAAA,CAAA,cAAc,IAAI,OAAQ,CAAA,SAAA,CAAA;AAAA,KAC3B,MAAA,IAAA,MAAA,CAAO,OAAQ,CAAA,IAAI,CAAG,EAAA;AAC7B,MAAA,OAAA,CAAQ,cAAc,CAAA,GAAI,OAAQ,CAAA,IAAA,CAAK,IAAQ,IAAA,0BAAA,CAAA;AAAA,KACxC,MAAA,IAAA,QAAA,CAAS,OAAQ,CAAA,IAAI,CAAG,EAAA;AAC/B,MAAA,OAAA,CAAQ,cAAc,CAAI,GAAA,YAAA,CAAA;AAAA,KACnB,MAAA,IAAA,CAAC,UAAW,CAAA,OAAA,CAAQ,IAAI,CAAG,EAAA;AAClC,MAAA,OAAA,CAAQ,cAAc,CAAI,GAAA,kBAAA,CAAA;AAAA,KAC9B;AAAA,GACJ;AAEA,EAAO,OAAA,IAAI,QAAQ,OAAO,CAAA,CAAA;AAC9B,CAAA,CAAA;AAEa,MAAA,cAAA,GAAiB,CAAC,OAAoC,KAAA;AAnLnE,EAAA,IAAA,EAAA,CAAA;AAoLI,EAAI,IAAA,OAAA,CAAQ,SAAS,KAAW,CAAA,EAAA;AAC5B,IAAA,IAAA,CAAI,EAAQ,GAAA,OAAA,CAAA,SAAA,KAAR,IAAmB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAA,CAAS,OAAU,CAAA,EAAA;AACtC,MAAO,OAAA,IAAA,CAAK,SAAU,CAAA,OAAA,CAAQ,IAAI,CAAA,CAAA;AAAA,KAC3B,MAAA,IAAA,QAAA,CAAS,OAAQ,CAAA,IAAI,CAAK,IAAA,MAAA,CAAO,OAAQ,CAAA,IAAI,CAAK,IAAA,UAAA,CAAW,OAAQ,CAAA,IAAI,CAAG,EAAA;AACnF,MAAA,OAAO,OAAQ,CAAA,IAAA,CAAA;AAAA,KACZ,MAAA;AACH,MAAO,OAAA,IAAA,CAAK,SAAU,CAAA,OAAA,CAAQ,IAAI,CAAA,CAAA;AAAA,KACtC;AAAA,GACJ;AACA,EAAO,OAAA,KAAA,CAAA,CAAA;AACX,CAAA,CAAA;AAEa,MAAA,WAAA,GAAc,OACvB,MACA,EAAA,OAAA,EACA,KACA,IACA,EAAA,QAAA,EACA,SACA,QACoB,KAAA;AACpB,EAAM,MAAA,UAAA,GAAa,IAAI,eAAgB,EAAA,CAAA;AAEvC,EAAA,MAAMC,QAAuB,GAAA;AAAA,IACzB,OAAA;AAAA,IACA,MAAM,IAAQ,IAAA,IAAA,GAAA,IAAA,GAAA,QAAA;AAAA,IACd,QAAQ,OAAQ,CAAA,MAAA;AAAA,IAChB,QAAQ,UAAW,CAAA,MAAA;AAAA,GACvB,CAAA;AAEA,EAAA,IAAI,OAAO,gBAAkB,EAAA;AACzB,IAAAA,QAAAA,CAAQ,cAAc,MAAO,CAAA,WAAA,CAAA;AAAA,GACjC;AAEA,EAAS,QAAA,CAAA,MAAM,UAAW,CAAA,KAAA,EAAO,CAAA,CAAA;AAEjC,EAAO,OAAA,MAAM,KAAM,CAAA,GAAA,EAAKA,QAAO,CAAA,CAAA;AACnC,CAAA,CAAA;AAEa,MAAA,iBAAA,GAAoB,CAAC,QAAA,EAAoB,cAAgD,KAAA;AAClG,EAAA,IAAI,cAAgB,EAAA;AAChB,IAAA,MAAM,OAAU,GAAA,QAAA,CAAS,OAAQ,CAAA,GAAA,CAAI,cAAc,CAAA,CAAA;AACnD,IAAI,IAAA,QAAA,CAAS,OAAO,CAAG,EAAA;AACnB,MAAO,OAAA,OAAA,CAAA;AAAA,KACX;AAAA,GACJ;AACA,EAAO,OAAA,KAAA,CAAA,CAAA;AACX,CAAA,CAAA;AAEa,MAAA,eAAA,GAAkB,OAAO,QAAqC,KAAA;AACvE,EAAI,IAAA,QAAA,CAAS,WAAW,GAAK,EAAA;AACzB,IAAI,IAAA;AACA,MAAA,MAAM,WAAc,GAAA,QAAA,CAAS,OAAQ,CAAA,GAAA,CAAI,cAAc,CAAA,CAAA;AACvD,MAAA,IAAI,WAAa,EAAA;AACb,QAAM,MAAA,SAAA,GAAY,CAAC,kBAAA,EAAoB,0BAA0B,CAAA,CAAA;AACjE,QAAM,MAAA,MAAA,GAAS,UAAU,IAAK,CAAA,CAAA,IAAA,KAAQ,YAAY,WAAY,EAAA,CAAE,UAAW,CAAA,IAAI,CAAC,CAAA,CAAA;AAChF,QAAA,IAAI,MAAQ,EAAA;AACR,UAAO,OAAA,MAAM,SAAS,IAAK,EAAA,CAAA;AAAA,SACxB,MAAA;AACH,UAAO,OAAA,MAAM,SAAS,IAAK,EAAA,CAAA;AAAA,SAC/B;AAAA,OACJ;AAAA,aACK,KAAO,EAAA;AACZ,MAAA,OAAA,CAAQ,MAAM,KAAK,CAAA,CAAA;AAAA,KACvB;AAAA,GACJ;AACA,EAAO,OAAA,KAAA,CAAA,CAAA;AACX,CAAA,CAAA;AAEa,MAAA,eAAA,GAAkB,CAAC,OAAA,EAA4B,MAA4B,KAAA;AAzPxF,EAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AA0PI,EAAA,MAAM,MAAiC,GAAA;AAAA,IACnC,GAAK,EAAA,aAAA;AAAA,IACL,GAAK,EAAA,cAAA;AAAA,IACL,GAAK,EAAA,WAAA;AAAA,IACL,GAAK,EAAA,WAAA;AAAA,IACL,GAAK,EAAA,uBAAA;AAAA,IACL,GAAK,EAAA,aAAA;AAAA,IACL,GAAK,EAAA,qBAAA;AAAA,IACL,GAAG,OAAQ,CAAA,MAAA;AAAA,GACf,CAAA;AAEA,EAAM,MAAA,KAAA,GAAQ,MAAO,CAAA,MAAA,CAAO,MAAM,CAAA,CAAA;AAClC,EAAA,IAAI,KAAO,EAAA;AACP,IAAA,MAAM,IAAI,QAAA,CAAS,OAAS,EAAA,MAAA,EAAQ,KAAK,CAAA,CAAA;AAAA,GAC7C;AAEA,EAAI,IAAA,CAAC,OAAO,EAAI,EAAA;AACZ,IAAM,MAAA,WAAA,GAAA,CAAc,EAAO,GAAA,MAAA,CAAA,MAAA,KAAP,IAAiB,GAAA,EAAA,GAAA,SAAA,CAAA;AACrC,IAAM,MAAA,eAAA,GAAA,CAAkB,EAAO,GAAA,MAAA,CAAA,UAAA,KAAP,IAAqB,GAAA,EAAA,GAAA,SAAA,CAAA;AAC7C,IAAA,MAAM,aAAa,MAAM;AACrB,MAAI,IAAA;AACA,QAAA,OAAO,IAAK,CAAA,SAAA,CAAU,MAAO,CAAA,IAAA,EAAM,MAAM,CAAC,CAAA,CAAA;AAAA,eACrC,CAAG,EAAA;AACR,QAAO,OAAA,KAAA,CAAA,CAAA;AAAA,OACX;AAAA,KACD,GAAA,CAAA;AAEH,IAAA,MAAM,IAAI,QAAA;AAAA,MAAS,OAAA;AAAA,MAAS,MAAA;AAAA,MACxB,CAA0B,uBAAA,EAAA,WAAW,CAAkB,eAAA,EAAA,eAAe,WAAW,SAAS,CAAA,CAAA;AAAA,KAC9F,CAAA;AAAA,GACJ;AACJ,CAAA,CAAA;AASa,MAAA,OAAA,GAAU,CAAI,MAAA,EAAuB,OAAqD,KAAA;AACnG,EAAA,OAAO,IAAI,iBAAA,CAAkB,OAAOC,QAAAA,EAAS,QAAQ,QAAa,KAAA;AAC9D,IAAI,IAAA;AACA,MAAM,MAAA,GAAA,GAAM,MAAO,CAAA,MAAA,EAAQ,OAAO,CAAA,CAAA;AAClC,MAAM,MAAA,QAAA,GAAW,YAAY,OAAO,CAAA,CAAA;AACpC,MAAM,MAAA,IAAA,GAAO,eAAe,OAAO,CAAA,CAAA;AACnC,MAAA,MAAM,OAAU,GAAA,MAAM,UAAW,CAAA,MAAA,EAAQ,OAAO,CAAA,CAAA;AAEhD,MAAI,IAAA,CAAC,SAAS,WAAa,EAAA;AACvB,QAAM,MAAA,QAAA,GAAW,MAAM,WAAY,CAAA,MAAA,EAAQ,SAAS,GAAK,EAAA,IAAA,EAAM,QAAU,EAAA,OAAA,EAAS,QAAQ,CAAA,CAAA;AAC1F,QAAM,MAAA,YAAA,GAAe,MAAM,eAAA,CAAgB,QAAQ,CAAA,CAAA;AACnD,QAAA,MAAM,cAAiB,GAAA,iBAAA,CAAkB,QAAU,EAAA,OAAA,CAAQ,cAAc,CAAA,CAAA;AAEzE,QAAA,MAAM,MAAoB,GAAA;AAAA,UACtB,GAAA;AAAA,UACA,IAAI,QAAS,CAAA,EAAA;AAAA,UACb,QAAQ,QAAS,CAAA,MAAA;AAAA,UACjB,YAAY,QAAS,CAAA,UAAA;AAAA,UACrB,MAAM,cAAkB,IAAA,IAAA,GAAA,cAAA,GAAA,YAAA;AAAA,SAC5B,CAAA;AAEA,QAAA,eAAA,CAAgB,SAAS,MAAM,CAAA,CAAA;AAE/B,QAAAA,QAAAA,CAAQ,OAAO,IAAI,CAAA,CAAA;AAAA,OACvB;AAAA,aACK,KAAO,EAAA;AACZ,MAAA,MAAA,CAAO,KAAK,CAAA,CAAA;AAAA,KAChB;AAAA,GACH,CAAA,CAAA;AACL,CAAA;;ACpTO,MAAM,aAAc,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOvB,OAAc,YAAa,CAAA;AAAA,IACvB,iBAAA;AAAA,IACA,IAAA;AAAA,IACA,SAAA;AAAA,IACA,OAAA;AAAA,IACA,CAAA;AAAA,IACA,UAAA;AAAA,IACA,MAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,OAAA;AAAA,IACA,UAAA;AAAA,IACA,GAAA;AAAA,IACA,IAAA;AAAA,IACA,MAAA;AAAA,IACA,MAAA;AAAA,IACA,gBAAA;AAAA,IACA,YAAA;AAAA,IACA,aAAA;AAAA,IACA,cAAA;AAAA,IACA,oBAAA;AAAA,IACA,eAAA;AAAA,IACA,cAAA;AAAA,IACA,aAAA;AAAA,IACA,mBAAA;AAAA,IACA,YAAA;AAAA,IACA,eAAA;AAAA,IACA,gBAAA;AAAA,IACA,cAAA;AAAA,IACA,eAAA;AAAA,IACA,KAAA;AAAA,IACA,QAAA;AAAA,IACA,SAAA;AAAA,IACA,cAAA;AAAA,IACA,WAAA;AAAA,IACA,UAAA;AAAA,IACA,WAAA;AAAA,IACA,YAAA;AAAA,IACA,OAAA;AAAA,IACA,SAAA;AAAA,IACA,UAAA;AAAA,IACA,YAAA;AAAA,IACA,gBAAA;AAAA,IACA,YAAA;AAAA,IACA,YAAA;AAAA,IACA,eAAA;AAAA,IACA,eAAA;AAAA,IACA,YAAA;AAAA,IACA,WAAA;AAAA,IACA,mBAAA;AAAA,IACA,gBAAA;AAAA,IACA,eAAA;AAAA,IACA,eAAA;AAAA,IACA,OAAA;AAAA,GAsN+B,EAAA;AAC/B,IAAA,OAAOC,QAAU,OAAS,EAAA;AAAA,MACtB,MAAQ,EAAA,KAAA;AAAA,MACR,GAAK,EAAA,mBAAA;AAAA,MACL,KAAO,EAAA;AAAA,QACH,mBAAqB,EAAA,iBAAA;AAAA,QACrB,MAAQ,EAAA,IAAA;AAAA,QACR,WAAa,EAAA,SAAA;AAAA,QACb,SAAW,EAAA,OAAA;AAAA,QACX,GAAK,EAAA,CAAA;AAAA,QACL,YAAc,EAAA,UAAA;AAAA,QACd,QAAU,EAAA,MAAA;AAAA,QACV,OAAS,EAAA,KAAA;AAAA,QACT,MAAQ,EAAA,IAAA;AAAA,QACR,SAAW,EAAA,OAAA;AAAA,QACX,YAAc,EAAA,UAAA;AAAA,QACd,KAAO,EAAA,GAAA;AAAA,QACP,MAAQ,EAAA,IAAA;AAAA,QACR,QAAU,EAAA,MAAA;AAAA,QACV,QAAU,EAAA,MAAA;AAAA,QACV,mBAAqB,EAAA,gBAAA;AAAA,QACrB,eAAiB,EAAA,YAAA;AAAA,QACjB,gBAAkB,EAAA,aAAA;AAAA,QAClB,iBAAmB,EAAA,cAAA;AAAA,QACnB,uBAAyB,EAAA,oBAAA;AAAA,QACzB,kBAAoB,EAAA,eAAA;AAAA,QACpB,iBAAmB,EAAA,cAAA;AAAA,QACnB,gBAAkB,EAAA,aAAA;AAAA,QAClB,sBAAwB,EAAA,mBAAA;AAAA,QACxB,eAAiB,EAAA,YAAA;AAAA,QACjB,kBAAoB,EAAA,eAAA;AAAA,QACpB,mBAAqB,EAAA,gBAAA;AAAA,QACrB,iBAAmB,EAAA,cAAA;AAAA,QACnB,kBAAoB,EAAA,eAAA;AAAA,QACpB,OAAS,EAAA,KAAA;AAAA,QACT,WAAa,EAAA,QAAA;AAAA,QACb,YAAc,EAAA,SAAA;AAAA,QACd,iBAAmB,EAAA,cAAA;AAAA,QACnB,cAAgB,EAAA,WAAA;AAAA,QAChB,aAAe,EAAA,UAAA;AAAA,QACf,eAAiB,EAAA,WAAA;AAAA,QACjB,gBAAkB,EAAA,YAAA;AAAA,QAClB,UAAY,EAAA,OAAA;AAAA,QACZ,YAAc,EAAA,SAAA;AAAA,QACd,aAAe,EAAA,UAAA;AAAA,QACf,eAAiB,EAAA,YAAA;AAAA,QACjB,mBAAqB,EAAA,gBAAA;AAAA,QACrB,eAAiB,EAAA,YAAA;AAAA,QACjB,eAAiB,EAAA,YAAA;AAAA,QACjB,kBAAoB,EAAA,eAAA;AAAA,QACpB,kBAAoB,EAAA,eAAA;AAAA,QACpB,eAAiB,EAAA,YAAA;AAAA,QACjB,cAAgB,EAAA,WAAA;AAAA,QAChB,sBAAwB,EAAA,mBAAA;AAAA,QACxB,mBAAqB,EAAA,gBAAA;AAAA,QACrB,kBAAoB,EAAA,eAAA;AAAA,QACpB,kBAAoB,EAAA,eAAA;AAAA,QACpB,UAAY,EAAA,OAAA;AAAA,OAChB;AAAA,KACH,CAAA,CAAA;AAAA,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAc,uBAAwB,CAAA;AAAA,IAClC,IAAA;AAAA,IACA,SAAA;AAAA,IACA,OAAA;AAAA,IACA,CAAA;AAAA,IACA,UAAA;AAAA,IACA,MAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,OAAA;AAAA,IACA,UAAA;AAAA,IACA,GAAA;AAAA,IACA,IAAA;AAAA,IACA,MAAA;AAAA,IACA,MAAA;AAAA,IACA,gBAAA;AAAA,IACA,YAAA;AAAA,IACA,aAAA;AAAA,IACA,cAAA;AAAA,IACA,oBAAA;AAAA,IACA,eAAA;AAAA,IACA,cAAA;AAAA,IACA,aAAA;AAAA,IACA,mBAAA;AAAA,IACA,YAAA;AAAA,IACA,eAAA;AAAA,IACA,gBAAA;AAAA,IACA,cAAA;AAAA,IACA,eAAA;AAAA,IACA,KAAA;AAAA,IACA,QAAA;AAAA,IACA,SAAA;AAAA,IACA,cAAA;AAAA,IACA,WAAA;AAAA,IACA,UAAA;AAAA,IACA,WAAA;AAAA,IACA,YAAA;AAAA,IACA,OAAA;AAAA,IACA,SAAA;AAAA,IACA,UAAA;AAAA,IACA,YAAA;AAAA,IACA,gBAAA;AAAA,IACA,YAAA;AAAA,IACA,YAAA;AAAA,IACA,eAAA;AAAA,IACA,eAAA;AAAA,IACA,YAAA;AAAA,IACA,WAAA;AAAA,IACA,mBAAA;AAAA,IACA,gBAAA;AAAA,IACA,eAAA;AAAA,IACA,eAAA;AAAA,IACA,OAAA;AAAA,GAkNwB,EAAA;AACxB,IAAA,OAAOA,QAAU,OAAS,EAAA;AAAA,MACtB,MAAQ,EAAA,KAAA;AAAA,MACR,GAAK,EAAA,4BAAA;AAAA,MACL,KAAO,EAAA;AAAA,QACH,MAAQ,EAAA,IAAA;AAAA,QACR,WAAa,EAAA,SAAA;AAAA,QACb,SAAW,EAAA,OAAA;AAAA,QACX,GAAK,EAAA,CAAA;AAAA,QACL,YAAc,EAAA,UAAA;AAAA,QACd,QAAU,EAAA,MAAA;AAAA,QACV,OAAS,EAAA,KAAA;AAAA,QACT,MAAQ,EAAA,IAAA;AAAA,QACR,SAAW,EAAA,OAAA;AAAA,QACX,YAAc,EAAA,UAAA;AAAA,QACd,KAAO,EAAA,GAAA;AAAA,QACP,MAAQ,EAAA,IAAA;AAAA,QACR,QAAU,EAAA,MAAA;AAAA,QACV,QAAU,EAAA,MAAA;AAAA,QACV,mBAAqB,EAAA,gBAAA;AAAA,QACrB,eAAiB,EAAA,YAAA;AAAA,QACjB,gBAAkB,EAAA,aAAA;AAAA,QAClB,iBAAmB,EAAA,cAAA;AAAA,QACnB,uBAAyB,EAAA,oBAAA;AAAA,QACzB,kBAAoB,EAAA,eAAA;AAAA,QACpB,iBAAmB,EAAA,cAAA;AAAA,QACnB,gBAAkB,EAAA,aAAA;AAAA,QAClB,sBAAwB,EAAA,mBAAA;AAAA,QACxB,eAAiB,EAAA,YAAA;AAAA,QACjB,kBAAoB,EAAA,eAAA;AAAA,QACpB,mBAAqB,EAAA,gBAAA;AAAA,QACrB,iBAAmB,EAAA,cAAA;AAAA,QACnB,kBAAoB,EAAA,eAAA;AAAA,QACpB,OAAS,EAAA,KAAA;AAAA,QACT,WAAa,EAAA,QAAA;AAAA,QACb,YAAc,EAAA,SAAA;AAAA,QACd,iBAAmB,EAAA,cAAA;AAAA,QACnB,cAAgB,EAAA,WAAA;AAAA,QAChB,aAAe,EAAA,UAAA;AAAA,QACf,eAAiB,EAAA,WAAA;AAAA,QACjB,gBAAkB,EAAA,YAAA;AAAA,QAClB,UAAY,EAAA,OAAA;AAAA,QACZ,YAAc,EAAA,SAAA;AAAA,QACd,aAAe,EAAA,UAAA;AAAA,QACf,eAAiB,EAAA,YAAA;AAAA,QACjB,mBAAqB,EAAA,gBAAA;AAAA,QACrB,eAAiB,EAAA,YAAA;AAAA,QACjB,eAAiB,EAAA,YAAA;AAAA,QACjB,kBAAoB,EAAA,eAAA;AAAA,QACpB,kBAAoB,EAAA,eAAA;AAAA,QACpB,eAAiB,EAAA,YAAA;AAAA,QACjB,cAAgB,EAAA,WAAA;AAAA,QAChB,sBAAwB,EAAA,mBAAA;AAAA,QACxB,mBAAqB,EAAA,gBAAA;AAAA,QACrB,kBAAoB,EAAA,eAAA;AAAA,QACpB,kBAAoB,EAAA,eAAA;AAAA,QACpB,UAAY,EAAA,OAAA;AAAA,OAChB;AAAA,MACA,MAAQ,EAAA;AAAA,QACJ,GAAK,EAAA,CAAA,wLAAA,CAAA;AAAA,QACL,GAAK,EAAA,CAAA,gCAAA,CAAA;AAAA,OACT;AAAA,KACH,CAAA,CAAA;AAAA,GACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAc,MAAO,CAAA;AAAA,IACjB,iBAAA;AAAA,IACA,IAAA;AAAA,IACA,SAAA;AAAA,IACA,OAAA;AAAA,IACA,CAAA;AAAA,IACA,UAAA;AAAA,IACA,MAAA;AAAA,IACA,KAAA;AAAA,IACA,IAAA;AAAA,IACA,OAAA;AAAA,IACA,UAAA;AAAA,IACA,GAAA;AAAA,IACA,IAAA;AAAA,IACA,MAAA;AAAA,IACA,MAAA;AAAA,IACA,gBAAA;AAAA,IACA,YAAA;AAAA,IACA,aAAA;AAAA,IACA,cAAA;AAAA,IACA,oBAAA;AAAA,IACA,eAAA;AAAA,IACA,cAAA;AAAA,IACA,aAAA;AAAA,IACA,mBAAA;AAAA,IACA,YAAA;AAAA,IACA,eAAA;AAAA,IACA,gBAAA;AAAA,IACA,cAAA;AAAA,IACA,eAAA;AAAA,IACA,KAAA;AAAA,IACA,QAAA;AAAA,IACA,SAAA;AAAA,IACA,cAAA;AAAA,IACA,WAAA;AAAA,IACA,UAAA;AAAA,IACA,WAAA;AAAA,IACA,YAAA;AAAA,IACA,OAAA;AAAA,IACA,SAAA;AAAA,IACA,UAAA;AAAA,IACA,YAAA;AAAA,IACA,gBAAA;AAAA,IACA,YAAA;AAAA,IACA,YAAA;AAAA,IACA,eAAA;AAAA,IACA,eAAA;AAAA,IACA,YAAA;AAAA,IACA,WAAA;AAAA,IACA,mBAAA;AAAA,IACA,gBAAA;AAAA,IACA,eAAA;AAAA,IACA,eAAA;AAAA,IACA,OAAA;AAAA,GAsNmC,EAAA;AACnC,IAAA,OAAOA,QAAU,OAAS,EAAA;AAAA,MACtB,MAAQ,EAAA,KAAA;AAAA,MACR,GAAK,EAAA,YAAA;AAAA,MACL,KAAO,EAAA;AAAA,QACH,mBAAqB,EAAA,iBAAA;AAAA,QACrB,MAAQ,EAAA,IAAA;AAAA,QACR,WAAa,EAAA,SAAA;AAAA,QACb,SAAW,EAAA,OAAA;AAAA,QACX,GAAK,EAAA,CAAA;AAAA,QACL,YAAc,EAAA,UAAA;AAAA,QACd,QAAU,EAAA,MAAA;AAAA,QACV,OAAS,EAAA,KAAA;AAAA,QACT,MAAQ,EAAA,IAAA;AAAA,QACR,SAAW,EAAA,OAAA;AAAA,QACX,YAAc,EAAA,UAAA;AAAA,QACd,KAAO,EAAA,GAAA;AAAA,QACP,MAAQ,EAAA,IAAA;AAAA,QACR,QAAU,EAAA,MAAA;AAAA,QACV,QAAU,EAAA,MAAA;AAAA,QACV,mBAAqB,EAAA,gBAAA;AAAA,QACrB,eAAiB,EAAA,YAAA;AAAA,QACjB,gBAAkB,EAAA,aAAA;AAAA,QAClB,iBAAmB,EAAA,cAAA;AAAA,QACnB,uBAAyB,EAAA,oBAAA;AAAA,QACzB,kBAAoB,EAAA,eAAA;AAAA,QACpB,iBAAmB,EAAA,cAAA;AAAA,QACnB,gBAAkB,EAAA,aAAA;AAAA,QAClB,sBAAwB,EAAA,mBAAA;AAAA,QACxB,eAAiB,EAAA,YAAA;AAAA,QACjB,kBAAoB,EAAA,eAAA;AAAA,QACpB,mBAAqB,EAAA,gBAAA;AAAA,QACrB,iBAAmB,EAAA,cAAA;AAAA,QACnB,kBAAoB,EAAA,eAAA;AAAA,QACpB,OAAS,EAAA,KAAA;AAAA,QACT,WAAa,EAAA,QAAA;AAAA,QACb,YAAc,EAAA,SAAA;AAAA,QACd,iBAAmB,EAAA,cAAA;AAAA,QACnB,cAAgB,EAAA,WAAA;AAAA,QAChB,aAAe,EAAA,UAAA;AAAA,QACf,eAAiB,EAAA,WAAA;AAAA,QACjB,gBAAkB,EAAA,YAAA;AAAA,QAClB,UAAY,EAAA,OAAA;AAAA,QACZ,YAAc,EAAA,SAAA;AAAA,QACd,aAAe,EAAA,UAAA;AAAA,QACf,eAAiB,EAAA,YAAA;AAAA,QACjB,mBAAqB,EAAA,gBAAA;AAAA,QACrB,eAAiB,EAAA,YAAA;AAAA,QACjB,eAAiB,EAAA,YAAA;AAAA,QACjB,kBAAoB,EAAA,eAAA;AAAA,QACpB,kBAAoB,EAAA,eAAA;AAAA,QACpB,eAAiB,EAAA,YAAA;AAAA,QACjB,cAAgB,EAAA,WAAA;AAAA,QAChB,sBAAwB,EAAA,mBAAA;AAAA,QACxB,mBAAqB,EAAA,gBAAA;AAAA,QACrB,kBAAoB,EAAA,eAAA;AAAA,QACpB,kBAAoB,EAAA,eAAA;AAAA,QACpB,UAAY,EAAA,OAAA;AAAA,OAChB;AAAA,KACH,CAAA,CAAA;AAAA,GACL;AAEJ;;ACl/BA,MAAM,8BAAA,uBAAqC,GAAY,CAAA;AAAA,EACrD,KAAA;AAAA,EACA,MAAA;AAAA,EACA,KAAA;AAAA,EACA,QAAA;AACF,CAAC,CAAA,CAAA;AAIM,SAAS,eAAe,KAAyB,EAAA;AAbxD,EAAA,IAAA,EAAA,CAAA;AAcE,EAAI,IAAA,CAAC,MAAM,MAAQ,EAAA;AACjB,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AACA,EAAM,MAAA,EAAE,SAAU,EAAA,GAAI,KAAM,CAAA,MAAA,CAAA;AAC5B,EAAA,IAAI,cAAc,KAAW,CAAA,EAAA;AAC3B,IAAO,OAAA,IAAA,CAAA;AAAA,GACT;AAEA,EAAO,OAAA,CAAC,8BAA+B,CAAA,GAAA,CAAA,CAAI,EAAU,GAAA,SAAA,CAAA,KAAA,CAAM,GAAG,CAAE,CAAA,GAAA,EAArB,KAAA,IAAA,GAAA,EAAA,GAA8B,EAAE,CAAA,CAAA;AAC7E;;;;;;;;ACFA,MAAM,kBAAqB,GAAA,2BAAA,CAAA;AAC3B,MAAM,+BAAkC,GAAA;AAAA,EACtC,SAAW,EAAA,kCAAA;AAAA,EACX,uBAAyB,EAAA,gDAAA;AAC3B,CAAA,CAAA;AAOA,MAAM,uBAA0B,GAAA;AAAA,EAC9B,MAAQ,EAAA;AAAA,IACN,sDAAA;AAAA,IACA,4DAAA;AAAA,IACA,WAAA;AAAA,GACF,CAAE,KAAK,IAAI,CAAA;AACb,CAAA,CAAA;AAEA,SAAS,qBAAqB,MAA8B,EAAA;AAC1D,EAAA,QAAQ,MAAqD;AAAA,IAC3D,KAAK,QAAA;AACH,MAAO,OAAA,uBAAA,CAAA;AAAA,IACT;AACE,MAAA,OAAO,EAAC,CAAA;AAAA,GACZ;AACF,CAAA;AAGA,SAAS,gBAAgB,KAAgB,EAAA;AACvC,EAAI,IAAA,KAAA,CAAM,WAAW,QAAU,EAAA;AAC7B,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AAEA,EAAI,IAAA,CAAC,MAAM,MAAQ,EAAA;AACjB,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AACA,EAAA;AAAA;AAAA,IAEE,KAAM,CAAA,MAAA,CAAO,UAAc,IAAA,CAAC,eAAe,KAAK,CAAA;AAAA,IAAA;AAEpD,CAAA;AAYO,MAAM,+BACX,YAA0C,CAAA;AAAA,EACxC,EAAI,EAAA,yCAAA;AACN,CAAC,EAAA;AAQI,MAAM,+BAEb,CAAA;AAAA,EAME,YAAY,OAAiD,EAAA;AAL7D,IAAiB,aAAA,CAAA,IAAA,EAAA,cAAA,CAAA,CAAA;AACjB,IAAiB,aAAA,CAAA,IAAA,EAAA,WAAA,CAAA,CAAA;AACjB,IAAiB,aAAA,CAAA,IAAA,EAAA,aAAA,CAAA,CAAA;AACjB,IAAA,aAAA,CAAA,IAAA,EAAQ,SAAU,EAAA,EAAA,CAAA,CAAA;AAGhB,IAAA,IAAA,CAAK,eAAe,OAAQ,CAAA,YAAA,CAAA;AAC5B,IAAA,IAAA,CAAK,YAAY,OAAQ,CAAA,SAAA,CAAA;AACzB,IAAA,IAAA,CAAK,cAAc,OAAQ,CAAA,WAAA,CAAA;AAAA,GAC7B;AAAA,EAEA,MAAc,UAAa,GAAA;AAnG7B,IAAA,IAAA,EAAA,CAAA;AAoGI,IAAA,IAAI,KAAK,OAAS,EAAA;AAChB,MAAA,OAAO,IAAK,CAAA,OAAA,CAAA;AAAA,KACd;AAEA,IAAM,MAAA,SAAA,GAAA,CACJ,UAAK,SAAU,CAAA,iBAAA;AAAA,MACb,+BAAgC,CAAA,SAAA;AAAA,UADlC,IAEK,GAAA,EAAA,GAAA,kBAAA,CAAA;AACP,IAAK,IAAA,CAAA,OAAA,GAAU,GAAG,MAAM,IAAA,CAAK,aAAa,UAAW,CAAA,OAAO,CAAC,CAAA,EAAG,SAAS,CAAA,CAAA,CAAA;AACzE,IAAA,OAAO,IAAK,CAAA,OAAA,CAAA;AAAA,GACd;AAAA,EAEA,MAAc,mBAAmB,KAAgB,EAAA;AAC/C,IAAM,MAAA,QAAA,GAAW,MAAM,IAAA,CAAK,UAAW,EAAA,CAAA;AACvC,IAAA,OAAO,GAAG,QAAQ,CAAA,YAAA,EAAe,MAAM,UAAU,CAAA,CAAA,EAAI,MAAM,IAAI,CAAA,CAAA,CAAA;AAAA,GACjE;AAAA,EAEA,MAAc,oBAAqB,CAAA,GAAA,EAAa,KAA2B,EAAA;AACzE,IAAA,MAAM,EAAE,KAAO,EAAA,OAAA,KAAY,MAAM,IAAA,CAAK,YAAY,cAAe,EAAA,CAAA;AAEjE,IAAA,OAAA,CAAQ,IAAO,GAAA,GAAA,CAAA;AACf,IAAA,OAAA,CAAQ,KAAQ,GAAA,OAAA,CAAA;AAEhB,IAAO,OAAA,MAAM,aAAc,CAAA,MAAA,CAAO,KAAK,CAAA,CAAA;AAAA,GACzC;AAAA,EAEA,MAAc,OACZ,CAAA,GAAA,EACA,oBAAiC,EAAC,EAClC,SAAiB,KACjB,EAAA;AACA,IAAA,MAAM,EAAE,KAAO,EAAA,OAAA,KAAY,MAAM,IAAA,CAAK,YAAY,cAAe,EAAA,CAAA;AAEjE,IAAM,MAAA,OAAA,GAAU,IAAI,OAAA,CAAQ,iBAAiB,CAAA,CAAA;AAE7C,IAAA,IAAI,OAAS,EAAA;AACX,MAAA,OAAA,CAAQ,GAAI,CAAA,eAAA,EAAiB,CAAU,OAAA,EAAA,OAAO,CAAE,CAAA,CAAA,CAAA;AAAA,KAClD;AAEA,IAAA,MAAM,WAAW,MAAM,KAAA,CAAM,KAAK,EAAE,OAAA,EAAS,QAAQ,CAAA,CAAA;AACrD,IAAI,IAAA,CAAC,SAAS,EAAI,EAAA;AAChB,MAAA,MAAM,IAAI,KAAA;AAAA,QACR,CAAgC,6BAAA,EAAA,QAAA,CAAS,MAAM,CAAA,EAAA,EAAK,SAAS,UAAU,CAAA,CAAA;AAAA,OACzE,CAAA;AAAA,KACF;AACA,IAAO,OAAA,QAAA,CAAA;AAAA,GACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAc,aAAa,SAA8C,EAAA;AACvE,IAAA,IAAI,SAAU,CAAA,MAAA,KAAW,QAAY,IAAA,CAAC,UAAU,MAAQ,EAAA;AACtD,MAAO,OAAA,SAAA,CAAA;AAAA,KACT;AAEA,IAAM,MAAA,OAAA,GAAU,oBAAqB,CAAA,SAAA,CAAU,MAAM,CAAA,CAAA;AAErD,IAAM,MAAA,aAAA,GAAgB,MAAM,OAAQ,CAAA,GAAA;AAAA,MAClC,SAAU,CAAA,MAAA,CAAO,GAAI,CAAA,OAAM,KAAS,KAAA;AAElC,QAAA,IAAI,KAAM,CAAA,QAAA,KAAa,CAAK,IAAA,eAAA,CAAgB,KAAK,CAAG,EAAA;AAClD,UAAO,OAAA,KAAA,CAAA;AAAA,SACT;AAEA,QAAM,MAAA,QAAA,GAAW,MAAM,IAAK,CAAA,OAAA;AAAA,UAC1B,MAAM,IAAK,CAAA,kBAAA,CAAmB,KAAK,CAAA;AAAA,UACnC,OAAA;AAAA,UACA,MAAA;AAAA,SACF,CAAA;AAEA,QAAO,OAAA;AAAA,UACL,GAAG,KAAA;AAAA,UACH,UAAU,MAAO,CAAA,QAAA,CAAS,QAAQ,GAAI,CAAA,gBAAgB,CAAC,CAAK,IAAA,CAAA;AAAA,SAC9D,CAAA;AAAA,OACD,CAAA;AAAA,KACH,CAAA;AAEA,IAAO,OAAA;AAAA,MACL,GAAG,SAAA;AAAA,MACH,MAAQ,EAAA,aAAA;AAAA,KACV,CAAA;AAAA,GACF;AAAA,EAEA,MAAc,mBAAmB,SAAwB,EAAA;AA1L3D,IAAA,IAAA,EAAA,EAAA,EAAA,CAAA;AA4LI,IAAI,IAAA,SAAA,CAAU,WAAW,QAAU,EAAA;AACjC,MAAA,OAAO,EAAC,CAAA;AAAA,KACV;AAEA,IAAM,MAAA,iBAAA,GAAoB,oBAAqB,CAAA,SAAA,CAAU,MAAM,CAAA,CAAA;AAE/D,IAAM,MAAA,MAAA,GAAS,MAAM,OAAQ,CAAA,GAAA;AAAA,MAC3B,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,SAAA,CAAU,WAAV,IAAkB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,GAAA;AAAA,QAChB,OAAM,KAEF,KAAA,CAAA,MAAM,IAAK,CAAA,OAAA;AAAA,UACT,MAAM,IAAK,CAAA,kBAAA,CAAmB,KAAK,CAAA;AAAA,UACnC,iBAAA;AAAA,WAEF,IAAK,EAAA;AAAA,OAAA,KAPX,YASK,CAAC,IAAI,OAAc,CAAA,MAAM,IAAI,CAAC,CAAA;AAAA,KACrC,CAAA;AAEA,IAAO,OAAA,MAAA,CAAA;AAAA,GACT;AAAA,EAEA,MAAM,cAAc,KAA2B,EAAA;AAlNjD,IAAA,IAAA,EAAA,CAAA;AAmNI,IAAM,MAAA,QAAA,GAAW,MAAM,IAAA,CAAK,UAAW,EAAA,CAAA;AAEvC,IAAA,MAAM,aAA4B,EAAC,CAAA;AACnC,IAAI,IAAA,iBAAA,CAAA;AAEJ,IAAG,GAAA;AACD,MAAA,MAAM,MAAM,MAAM,IAAA,CAAK,oBAAqB,CAAA,CAAA,EAAG,QAAQ,CAAiB,aAAA,CAAA,EAAA;AAAA,QACtE,GAAG,KAAA;AAAA,QACH,iBAAA;AAAA,OACD,CAAA,CAAA;AAED,MAAA,iBAAA,GAAoB,GAAI,CAAA,iBAAA,CAAA;AACxB,MAAA,UAAA,CAAW,KAAK,GAAI,CAAA,EAAA,GAAA,GAAA,CAAI,KAAJ,KAAA,IAAA,GAAA,EAAA,GAAa,EAAG,CAAA,CAAA;AAAA,KAC7B,QAAA,iBAAA,EAAA;AAIT,IAAM,MAAA,MAAA,GAAS,MAAM,OAAQ,CAAA,GAAA;AAAA,MAC3B,UAAA,CAAW,GAAI,CAAA,OAAM,SAAc,MAAA;AAAA,QACjC,SAAW,EAAA,MAAM,IAAK,CAAA,YAAA,CAAa,SAAS,CAAA;AAAA,QAC5C,eAAiB,EAAA,MAAM,IAAK,CAAA,kBAAA,CAAmB,SAAS,CAAA;AAAA,OACxD,CAAA,CAAA;AAAA,KACJ,CAAA;AAEA,IAAA,MAAM,iBAAiB,MAAO,CAAA,MAAA;AAAA,MAC5B,CAAE,CAAA,KAAA;AA5OR,QAAA,IAAAC,GAAA,EAAA,EAAA,CAAA;AA4OW,QAAAA,OAAAA,CAAAA,EAAAA,GAAAA,CAAAA,GAAAA,GAAA,CAAE,CAAA,SAAA,KAAF,IAAAA,GAAAA,KAAAA,CAAAA,GAAAA,GAAAA,CAAa,WAAb,IAAqB,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,IAAA,CAAK,CAAS,KAAA,KAAA,cAAA,CAAe,KAAK,CAAA,CAAA,CAAA;AAAA,OAAA;AAAA,KAC9D,CAAA;AAEA,IAAO,OAAA;AAAA,MACL,UAAY,EAAA,cAAA;AAAA,KACd,CAAA;AAAA,GACF;AAAA,EAEA,cAAiB,GAAA;AACf,IAAM,MAAA,gBAAA,GAAmB,KAAK,SAAU,CAAA,kBAAA;AAAA,MACtC,+BAAgC,CAAA,uBAAA;AAAA,KAClC,CAAA;AAEA,IAAA,IAAI,gBAAkB,EAAA;AACpB,MAAO,OAAA;AAAA,QACL,WAAa,EAAA;AAAA,UACX,GAAG,oCAAA;AAAA,UACH,GAAG,iDAAA;AAAA,SACL;AAAA,OACF,CAAA;AAAA,KACF;AAEA,IAAO,OAAA,EAAE,aAAa,oCAAqC,EAAA,CAAA;AAAA,GAC7D;AACF;;AClQO,MAAM,eAAe,cAAe,CAAA;AAAA,EACzC,EAAI,EAAA,0BAAA;AACN,CAAC,CAAA;;ACgBM,MAAM,+BAA+B,YAAa,CAAA;AAAA,EACvD,EAAI,EAAA,0BAAA;AAAA,EACJ,MAAQ,EAAA;AAAA,IACN,IAAM,EAAA,YAAA;AAAA,GACR;AAAA,EACA,IAAM,EAAA;AAAA,IACJ,gBAAiB,CAAA;AAAA,MACf,GAAK,EAAA,4BAAA;AAAA,MACL,IAAM,EAAA;AAAA,QACJ,YAAc,EAAA,eAAA;AAAA,QACd,SAAW,EAAA,YAAA;AAAA,QACX,WAAa,EAAA,cAAA;AAAA,OACf;AAAA,MACA,OAAA,EAAS,CAAC,EAAE,YAAA,EAAc,WAAW,WAAY,EAAA,KAC/C,IAAI,+BAAgC,CAAA;AAAA,QAClC,YAAA;AAAA,QACA,SAAA;AAAA,QACA,WAAA;AAAA,OACD,CAAA;AAAA,KACJ,CAAA;AAAA,GACH;AACF,CAAC,EAAA;AAEM,MAAM,6BAA6B,4BAA6B,CAAA,OAAA;AAAA,EACrE,wBAAyB,CAAA;AAAA,IACvB,IAAM,EAAA,4BAAA;AAAA,IACN,SAAW,EAAA;AAAA,MACT,IAAA,EAAM,MAAM,OAAO,yBAAc,EAAE,IAAK,CAAA,CAAA,CAAA,KAAK,EAAE,sBAAsB,CAAA;AAAA,KACvE;AAAA,GACD,CAAA;AACH,EAAA;AAEa,MAAA,iCAAA,GAAoC,CAAC,MAAA,KAChD,oCAAqC,CAAA,IAAA;AAAA,EAAK,CAAM,KAAA,KAAA;AArDlD,IAAA,IAAA,EAAA,CAAA;AAsDI,IAAA,OAAA,OAAA,CAAA,CAAQ,EAAO,GAAA,MAAA,CAAA,QAAA,CAAS,WAAhB,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAA8B,MAAM,UAAW,CAAA,CAAA,CAAA;AAAA,GAAA;AACzD,EAAA;AAEK,MAAM,gDAAgD,CAAC,MAAA,KAC5D,iCAAkC,CAAA,MAAM,KACxC,iDAAkD,CAAA,IAAA;AAAA,EAAK,CAAM,KAAA,KAAA;AA3D/D,IAAA,IAAA,EAAA,CAAA;AA4DI,IAAA,OAAA,OAAA,CAAA,CAAQ,EAAO,GAAA,MAAA,CAAA,QAAA,CAAS,WAAhB,KAAA,IAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAA8B,MAAM,UAAW,CAAA,CAAA,CAAA;AAAA,GAAA;AACzD;;;;"}